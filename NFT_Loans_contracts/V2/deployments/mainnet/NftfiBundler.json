{
  "address": "0xf8CB0341563213BF33EaFFc7a6775Ed0Eb6c1401",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftfiHub",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bundleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "NewBundle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "childContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "childTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Received1155Child",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_childContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_childTokenId",
          "type": "uint256"
        }
      ],
      "name": "ReceivedChild",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_erc20Contract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "ReceivedERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "childContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "childTokenIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "Transfer1155BatchChild",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "childContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "childTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer1155Child",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_childContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_childTokenId",
          "type": "uint256"
        }
      ],
      "name": "TransferChild",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_erc20Contract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferERC20",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ERC998_MAGIC_VALUE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_erc20Contract",
          "type": "address"
        }
      ],
      "name": "balanceOfERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenContract",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "safeTransferable",
                  "type": "bool"
                }
              ],
              "internalType": "struct IBundleBuilder.BundleElementERC721[]",
              "name": "erc721s",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenContract",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IBundleBuilder.BundleElementERC20[]",
              "name": "erc20s",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenContract",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct IBundleBuilder.BundleElementERC1155[]",
              "name": "erc1155s",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IBundleBuilder.BundleElements",
          "name": "_bundleElements",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "buildBundle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_childContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_childTokenId",
          "type": "uint256"
        }
      ],
      "name": "childBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "childContractByIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "childContract",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_childContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_childTokenId",
          "type": "uint256"
        }
      ],
      "name": "childExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_childContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "childTokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "childTokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "decomposeBundle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "erc20ContractByIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getChild",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getERC20",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hub",
      "outputs": [
        {
          "internalType": "contract INftfiHub",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_childTokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_childContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_childTokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOfChild",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "parentTokenOwner",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "parentTokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "permittedAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc20Contract",
          "type": "address"
        }
      ],
      "name": "permittedErc20Asset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "rootOwnerOf",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "rootOwner",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_childContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_childTokenId",
          "type": "uint256"
        }
      ],
      "name": "rootOwnerOfChild",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "rootOwner",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_childContract",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_childTokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferChild",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_childContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_childTokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferChild",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_childContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_childTokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferChild",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_childContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_childTokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferChild",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "totalChildContracts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_childContract",
          "type": "address"
        }
      ],
      "name": "totalChildTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "totalERC20Contracts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_childContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_childTokenId",
          "type": "uint256"
        }
      ],
      "name": "transferChild",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "transferChildToParent",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_erc20Contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "transferERC223",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9dad17c83cad91b880a8852fb6bcad40cac469934b9e9c1ac0da51cafa984a82",
  "receipt": {
    "to": null,
    "from": "0x214a4bC7C7843918DDbeF45EE47EBEd1688B0ff2",
    "contractAddress": "0xf8CB0341563213BF33EaFFc7a6775Ed0Eb6c1401",
    "transactionIndex": 41,
    "gasUsed": "4590807",
    "logsBloom": "0x
    "blockHash": "0xd99a655099bd1aeb1049b9d46dca88de32a355f31d1c8c1bbff48ebf975f514c",
    "transactionHash": "0x9dad17c83cad91b880a8852fb6bcad40cac469934b9e9c1ac0da51cafa984a82",
    "logs": [],
    "blockNumber": 14443156,
    "cumulativeGasUsed": "7484611",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd99b8075Cb583FdE8F60A2C3aC84eE37c701a578",
    "NFTBundler",
    "NFTBundler"
  ],
  "numDeployments": 1,
  "solcInputHash": "e960dbb71492b307ed8580de393cc147",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftfiHub\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bundleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"NewBundle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"childContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"childTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Received1155Child\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_childContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_childTokenId\",\"type\":\"uint256\"}],\"name\":\"ReceivedChild\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_erc20Contract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ReceivedERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"childContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"childTokenIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"Transfer1155BatchChild\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"childContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"childTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer1155Child\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_childContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_childTokenId\",\"type\":\"uint256\"}],\"name\":\"TransferChild\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_erc20Contract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferERC20\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ERC998_MAGIC_VALUE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20Contract\",\"type\":\"address\"}],\"name\":\"balanceOfERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"safeTransferable\",\"type\":\"bool\"}],\"internalType\":\"struct IBundleBuilder.BundleElementERC721[]\",\"name\":\"erc721s\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IBundleBuilder.BundleElementERC20[]\",\"name\":\"erc20s\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IBundleBuilder.BundleElementERC1155[]\",\"name\":\"erc1155s\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IBundleBuilder.BundleElements\",\"name\":\"_bundleElements\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"buildBundle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_childContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_childTokenId\",\"type\":\"uint256\"}],\"name\":\"childBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"childContractByIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"childContract\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_childContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_childTokenId\",\"type\":\"uint256\"}],\"name\":\"childExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_childContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"childTokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"childTokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"decomposeBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"erc20ContractByIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getChild\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getERC20\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hub\",\"outputs\":[{\"internalType\":\"contract INftfiHub\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_childTokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_childContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_childTokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOfChild\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentTokenOwner\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"parentTokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"permittedAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20Contract\",\"type\":\"address\"}],\"name\":\"permittedErc20Asset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"rootOwnerOf\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"rootOwner\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_childContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_childTokenId\",\"type\":\"uint256\"}],\"name\":\"rootOwnerOfChild\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"rootOwner\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_childContract\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_childTokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_childContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_childTokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_childContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_childTokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_childContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_childTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"totalChildContracts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_childContract\",\"type\":\"address\"}],\"name\":\"totalChildTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"totalERC20Contracts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_childContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_childTokenId\",\"type\":\"uint256\"}],\"name\":\"transferChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"transferChildToParent\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc20Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"transferERC223\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NFTfi\",\"details\":\"ERC998 Top-Down Composable Non-Fungible Token that supports permitted ERC721, ERC1155 and ERC20 children.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"balanceOfERC20(uint256,address)\":{\"details\":\"Look up the balance of ERC20 tokens for a specific token and ERC20 contract\",\"params\":{\"_erc20Contract\":\"The ERC20 contract\",\"_tokenId\":\"The token that owns the ERC20 tokens\"},\"returns\":{\"_0\":\"The number of ERC20 tokens owned by a token\"}},\"buildBundle(((address,uint256,bool)[],(address,uint256)[],(address,uint256[],uint256[])[]),address,address)\":{\"details\":\"used by the loan contract to build a bundle from the BundleElements struct at the beginning of a loan, returns the id of the created bundle\",\"params\":{\"_bundleElements\":\"- the lists of erc721-20-1155 tokens that are to be bundled\",\"_receiver\":\"receiver of the created bundle, normally the loan contract\",\"_sender\":\"sender of the tokens in the bundle - the borrower\"}},\"childBalance(uint256,address,uint256)\":{\"details\":\"Gives child balance for a specific child contract and child id\",\"params\":{\"_childContract\":\"The ERC1155 contract of the child token\",\"_childTokenId\":\"The tokenId of the child token\"}},\"childContractByIndex(uint256,uint256)\":{\"params\":{\"_index\":\"The index position of the child contract\",\"_tokenId\":\"The parent token of child tokens in child contract\"},\"returns\":{\"childContract\":\"The contract found at the _tokenId and index\"}},\"childExists(address,uint256)\":{\"params\":{\"_childContract\":\"The contract address of the child token\",\"_childTokenId\":\"The tokenId of the child\"},\"returns\":{\"_0\":\"True if the child exists, false otherwise\"}},\"childTokenByIndex(uint256,address,uint256)\":{\"params\":{\"_childContract\":\"The child contract of the child token\",\"_index\":\"The index position of the child token\",\"_tokenId\":\"The parent token of the child token\"},\"returns\":{\"childTokenId\":\"The child tokenId for the parent token, child token and index\"}},\"constructor\":{\"details\":\"Stores the NftfiHub, name and symbol\",\"params\":{\"_name\":\"name of the token contract\",\"_nftfiHub\":\"Address of the NftfiHub contract\",\"_symbol\":\"symbol of the token contract\"}},\"decomposeBundle(uint256,address)\":{\"details\":\"This method may run out of gas if the list of children is too big. In that case, children can be removed      individually.\",\"params\":{\"_receiver\":\"address of the receiver of the children\",\"_tokenId\":\"the id of the bundle\"}},\"erc20ContractByIndex(uint256,uint256)\":{\"params\":{\"_index\":\"The index position of the child contract\",\"_tokenId\":\"The parent token of ERC20 tokens\"},\"returns\":{\"_0\":\"childContract The contract found at the tokenId and index\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getERC20(address,uint256,address,uint256)\":{\"details\":\"This contract has to be approved first by _erc20Contract\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"params\":{\"_data\":\"Up to the first 32 bytes contains an integer which is the receiving parent tokenId\",\"_from\":\"The owner of the child token\",\"_ids\":\"The list of token id that is being transferred to the parent\",\"_values\":\"The list of amounts of the tokens that is being transferred\"},\"returns\":{\"_0\":\"the selector of this method\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"params\":{\"_childTokenId\":\"The token that is being transferred to the parent\",\"_data\":\"Up to the first 32 bytes contains an integer which is the receiving parent tokenId\",\"_from\":\"The owner of the child token\"},\"returns\":{\"_0\":\"the selector of this method\"}},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"ownerOfChild(address,uint256)\":{\"params\":{\"_childContract\":\"The contract address of the child token\",\"_childTokenId\":\"The tokenId of the child\"},\"returns\":{\"parentTokenId\":\"The parent tokenId of _childTokenId\",\"parentTokenOwner\":\"The parent address of the parent token and ERC998 magic value\"}},\"permittedAsset(address)\":{\"params\":{\"_asset\":\"address of the asset\"},\"returns\":{\"_0\":\"true if permitted, false otherwise\"}},\"permittedErc20Asset(address)\":{\"params\":{\"_erc20Contract\":\"address of the erc20\"},\"returns\":{\"_0\":\"true if permitted, false otherwise\"}},\"rootOwnerOf(uint256)\":{\"params\":{\"_tokenId\":\"The token to query for a root owner address\"},\"returns\":{\"rootOwner\":\"The root owner at the top of tree of tokens and ERC998 magic value.\"}},\"rootOwnerOfChild(address,uint256)\":{\"details\":\"Returns the owner at the top of the tree of composables Use Cases handled: - Case 1: Token owner is this contract and token. - Case 2: Token owner is other external top-down composable - Case 3: Token owner is other contract - Case 4: Token owner is user\",\"params\":{\"_childContract\":\"The contract address of the child token\",\"_childTokenId\":\"The tokenId of the child\"},\"returns\":{\"rootOwner\":\"The root owner at the top of tree of tokens and ERC998 magic value\"}},\"safeBatchTransferChild(uint256,address,address,uint256[],uint256[],bytes)\":{\"params\":{\"_amounts\":\"The list of amount of the token that is being transferred\",\"_childContract\":\"The ERC1155 contract of the child token\",\"_childTokenIds\":\"The list of tokenId of the token that is being transferred\",\"_data\":\"Additional data with no specified format\",\"_to\":\"The address that receives the child token\",\"_tokenId\":\"The owning token to transfer from\"}},\"safeTransferChild(uint256,address,address,uint256)\":{\"params\":{\"_childContract\":\"The ERC721 contract of the child token\",\"_childTokenId\":\"The tokenId of the token that is being transferred\",\"_fromTokenId\":\"The owning token to transfer from\",\"_to\":\"The address that receives the child token\"}},\"safeTransferChild(uint256,address,address,uint256,bytes)\":{\"params\":{\"_childContract\":\"The ERC721 contract of the child token\",\"_childTokenId\":\"The tokenId of the token that is being transferred\",\"_data\":\"Additional data with no specified format\",\"_fromTokenId\":\"The owning token to transfer from\",\"_to\":\"The address that receives the child token\"}},\"safeTransferChild(uint256,address,address,uint256,uint256,bytes)\":{\"params\":{\"_amount\":\"The amount of the token that is being transferred\",\"_childContract\":\"The ERC1155 contract of the child token\",\"_childTokenId\":\"The tokenId of the token that is being transferred\",\"_data\":\"Additional data with no specified format\",\"_to\":\"The address that receives the child token\",\"_tokenId\":\"The owning token to transfer from\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalChildContracts(uint256)\":{\"params\":{\"_tokenId\":\"The parent token of child tokens in child contracts\"},\"returns\":{\"_0\":\"uint256 The total number of child contracts with tokens owned by _tokenId\"}},\"totalChildTokens(uint256,address)\":{\"params\":{\"_childContract\":\"The child contract containing the child tokens\",\"_tokenId\":\"The parent token of child tokens\"},\"returns\":{\"_0\":\"uint256 The total number of child tokens found in child contract that are owned by _tokenId\"}},\"totalERC20Contracts(uint256)\":{\"params\":{\"_tokenId\":\"The parent token of ERC20 tokens\"},\"returns\":{\"_0\":\"uint256 The total number of ERC20 tokens\"}},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferChild(uint256,address,address,uint256)\":{\"details\":\"Transfer child token from top-down composable to address\",\"params\":{\"_childContract\":\"The ERC721 contract of the child token\",\"_childTokenId\":\"The tokenId of the token that is being transferred\",\"_fromTokenId\":\"The owning token to transfer from\",\"_to\":\"The address that receives the child token\"}},\"transferERC20(uint256,address,address,uint256)\":{\"params\":{\"_erc20Contract\":\"The ERC20 contract\",\"_to\":\"The address to send the ERC20 tokens to\",\"_tokenId\":\"The token to transfer from\",\"_value\":\"The number of ERC20 tokens to transfer\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"NftfiBundler\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"childContractByIndex(uint256,uint256)\":{\"notice\":\"Get child contract by tokenId and index\"},\"childExists(address,uint256)\":{\"notice\":\"Tells whether the ERC721 type child exists or not\"},\"childTokenByIndex(uint256,address,uint256)\":{\"notice\":\"Get child token owned by _tokenId, in child contract, at index position\"},\"decomposeBundle(uint256,address)\":{\"notice\":\"Remove all the children from the bundle\"},\"erc20ContractByIndex(uint256,uint256)\":{\"notice\":\"Get ERC20 contract by tokenId and index\"},\"getChild(address,uint256,address,uint256)\":{\"notice\":\"Transfer a child token from an ERC721 contract to a composable. Used for old tokens that does not have a safeTransferFrom method like cryptokitties\"},\"getERC20(address,uint256,address,uint256)\":{\"notice\":\"Get ERC20 tokens from ERC20 contract.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"A token receives a batch of child tokens param The address that caused the transfer\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"notice\":\"A token receives a child token\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"A token receives a child token param The address that caused the transfer\"},\"ownerOfChild(address,uint256)\":{\"notice\":\"Get the parent tokenId and its owner of a ERC721 child token\"},\"permittedAsset(address)\":{\"notice\":\"Tells if an asset is permitted or not\"},\"permittedErc20Asset(address)\":{\"notice\":\"Tells if the erc20 is permitted or not\"},\"rootOwnerOf(uint256)\":{\"notice\":\"Get the root owner of tokenId\"},\"rootOwnerOfChild(address,uint256)\":{\"notice\":\"Get the root owner of a child token\"},\"safeBatchTransferChild(uint256,address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Transfer batch of ERC1155 child token from top-down composable to address or other top-down composable\"},\"safeTransferChild(uint256,address,address,uint256)\":{\"notice\":\"Transfer child token from top-down composable to address\"},\"safeTransferChild(uint256,address,address,uint256,bytes)\":{\"notice\":\"Transfer child token from top-down composable to address or other top-down composable\"},\"safeTransferChild(uint256,address,address,uint256,uint256,bytes)\":{\"notice\":\"Transfer a ERC1155 child token from top-down composable to address or other top-down composable\"},\"tokenFallback(address,uint256,bytes)\":{\"notice\":\"NOT SUPPORTED Intended to receive ERC223 tokens. ERC223 tokens can be deposited as regular ERC20\"},\"totalChildContracts(uint256)\":{\"notice\":\"Get the total number of child contracts with tokens that are owned by _tokenId\"},\"totalChildTokens(uint256,address)\":{\"notice\":\"Get the total number of child tokens owned by tokenId that exist in a child contract\"},\"totalERC20Contracts(uint256)\":{\"notice\":\"Get the total number of ERC20 tokens owned by tokenId\"},\"transferChildToParent(uint256,address,uint256,address,uint256,bytes)\":{\"notice\":\"NOT SUPPORTED Intended to transfer bottom-up composable child token from top-down composable to other ERC721 token.\"},\"transferERC20(uint256,address,address,uint256)\":{\"notice\":\"Transfer ERC20 tokens to address\"},\"transferERC223(uint256,address,address,uint256,bytes)\":{\"notice\":\"NOT SUPPORTED Intended to transfer ERC223 tokens. ERC223 tokens can be transferred as regular ERC20\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/composable/NftfiBundler.sol\":\"NftfiBundler\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overriden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, _data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits a {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x11b84bb56dc112a6590bfe3e0efa118aa1b5891132342200d04c4ef544cb93de\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"./IERC721Enumerable.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\\n * enumerability of all the token ids in the contract as well as all token ids owned by each\\n * account.\\n */\\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) private _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] private _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721.balanceOf(owner), \\\"ERC721Enumerable: owner index out of bounds\\\");\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721Enumerable.totalSupply(), \\\"ERC721Enumerable: global index out of bounds\\\");\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n\\n        if (from == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (from != to) {\\n            _removeTokenFromOwnerEnumeration(from, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (to != from) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = ERC721.balanceOf(to);\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/structs/EnumerableSet.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastvalue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastvalue;\\n                // Update the index for the moved value\\n                set._indexes[lastvalue] = valueIndex; // Replace lastvalue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        return _values(set._inner);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900\",\"license\":\"MIT\"},\"contracts/composable/ERC9981155Extension.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\\\";\\n\\nimport \\\"./ERC998TopDown.sol\\\";\\nimport \\\"../interfaces/IERC998ERC1155TopDown.sol\\\";\\n\\n/**\\n * @title ERC9981155Extension\\n * @author NFTfi\\n * @dev ERC998TopDown extension to support ERC1155 children\\n */\\nabstract contract ERC9981155Extension is ERC998TopDown, IERC998ERC1155TopDown, IERC1155Receiver {\\n    using EnumerableSet for EnumerableSet.UintSet;\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    // tokenId => (child address => (child tokenId => balance))\\n    mapping(uint256 => mapping(address => mapping(uint256 => uint256))) internal balances;\\n\\n    /**\\n     * @dev Gives child balance for a specific child contract and child id\\n     * @param _childContract The ERC1155 contract of the child token\\n     * @param _childTokenId The tokenId of the child token\\n     */\\n    function childBalance(\\n        uint256 _tokenId,\\n        address _childContract,\\n        uint256 _childTokenId\\n    ) external view override returns (uint256) {\\n        return balances[_tokenId][_childContract][_childTokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 _interfaceId)\\n        public\\n        view\\n        virtual\\n        override(ERC998TopDown, IERC165)\\n        returns (bool)\\n    {\\n        return\\n            _interfaceId == type(IERC998ERC1155TopDown).interfaceId ||\\n            _interfaceId == type(IERC1155Receiver).interfaceId ||\\n            super.supportsInterface(_interfaceId);\\n    }\\n\\n    /**\\n     * @notice Transfer a ERC1155 child token from top-down composable to address or other top-down composable\\n     * @param _tokenId The owning token to transfer from\\n     * @param _to The address that receives the child token\\n     * @param _childContract The ERC1155 contract of the child token\\n     * @param _childTokenId The tokenId of the token that is being transferred\\n     * @param _amount The amount of the token that is being transferred\\n     * @param _data Additional data with no specified format\\n     */\\n    function safeTransferChild(\\n        uint256 _tokenId,\\n        address _to,\\n        address _childContract,\\n        uint256 _childTokenId,\\n        uint256 _amount,\\n        bytes memory _data\\n    ) external override nonReentrant {\\n        _validateReceiver(_to);\\n        _validate1155ChildTransfer(_tokenId);\\n        _remove1155Child(_tokenId, _childContract, _childTokenId, _amount);\\n        if (_to == address(this)) {\\n            _validateAndReceive1155Child(msg.sender, _childContract, _childTokenId, _amount, _data);\\n        } else {\\n            IERC1155(_childContract).safeTransferFrom(address(this), _to, _childTokenId, _amount, _data);\\n            emit Transfer1155Child(_tokenId, _to, _childContract, _childTokenId, _amount);\\n        }\\n    }\\n\\n    /**\\n     * @notice Transfer batch of ERC1155 child token from top-down composable to address or other top-down composable\\n     * @param _tokenId The owning token to transfer from\\n     * @param _to The address that receives the child token\\n     * @param _childContract The ERC1155 contract of the child token\\n     * @param _childTokenIds The list of tokenId of the token that is being transferred\\n     * @param _amounts The list of amount of the token that is being transferred\\n     * @param _data Additional data with no specified format\\n     */\\n    function safeBatchTransferChild(\\n        uint256 _tokenId,\\n        address _to,\\n        address _childContract,\\n        uint256[] memory _childTokenIds,\\n        uint256[] memory _amounts,\\n        bytes memory _data\\n    ) external override nonReentrant {\\n        require(_childTokenIds.length == _amounts.length, \\\"ids and amounts length mismatch\\\");\\n        _validateReceiver(_to);\\n\\n        _validate1155ChildTransfer(_tokenId);\\n        for (uint256 i = 0; i < _childTokenIds.length; ++i) {\\n            uint256 childTokenId = _childTokenIds[i];\\n            uint256 amount = _amounts[i];\\n\\n            _remove1155Child(_tokenId, _childContract, childTokenId, amount);\\n            if (_to == address(this)) {\\n                _validateAndReceive1155Child(msg.sender, _childContract, childTokenId, amount, _data);\\n            }\\n        }\\n\\n        if (_to != address(this)) {\\n            IERC1155(_childContract).safeBatchTransferFrom(address(this), _to, _childTokenIds, _amounts, _data);\\n            emit Transfer1155BatchChild(_tokenId, _to, _childContract, _childTokenIds, _amounts);\\n        }\\n    }\\n\\n    /**\\n     * @notice A token receives a child token\\n     */\\n    function onERC1155Received(\\n        address,\\n        address,\\n        uint256,\\n        uint256,\\n        bytes memory\\n    ) external virtual override returns (bytes4) {\\n        revert(\\\"external calls restricted\\\");\\n    }\\n\\n    /**\\n     * @notice A token receives a batch of child tokens\\n     * param The address that caused the transfer\\n     * @param _from The owner of the child token\\n     * @param _ids The list of token id that is being transferred to the parent\\n     * @param _values The list of amounts of the tokens that is being transferred\\n     * @param _data Up to the first 32 bytes contains an integer which is the receiving parent tokenId\\n     * @return the selector of this method\\n     */\\n    function onERC1155BatchReceived(\\n        address,\\n        address _from,\\n        uint256[] memory _ids,\\n        uint256[] memory _values,\\n        bytes memory _data\\n    ) external virtual override nonReentrant returns (bytes4) {\\n        require(_data.length == 32, \\\"data must contain tokenId to transfer the child token to\\\");\\n        uint256 _receiverTokenId = _parseTokenId(_data);\\n\\n        for (uint256 i = 0; i < _ids.length; i++) {\\n            _receive1155Child(_receiverTokenId, msg.sender, _ids[i], _values[i]);\\n            emit Received1155Child(_from, _receiverTokenId, msg.sender, _ids[i], _values[i]);\\n        }\\n        return this.onERC1155BatchReceived.selector;\\n    }\\n\\n    /**\\n     * @dev Validates the data of the child token and receives it\\n     * @param _from The owner of the child token\\n     * @param _childContract The ERC1155 contract of the child token\\n     * @param _id The token id that is being transferred to the parent\\n     * @param _amount The amount of the token that is being transferred\\n     * @param _data Up to the first 32 bytes contains an integer which is the receiving parent tokenId\\n     */\\n    function _validateAndReceive1155Child(\\n        address _from,\\n        address _childContract,\\n        uint256 _id,\\n        uint256 _amount,\\n        bytes memory _data\\n    ) internal virtual {\\n        require(_data.length == 32, \\\"data must contain tokenId to transfer the child token to\\\");\\n\\n        uint256 _receiverTokenId = _parseTokenId(_data);\\n        _receive1155Child(_receiverTokenId, _childContract, _id, _amount);\\n        emit Received1155Child(_from, _receiverTokenId, _childContract, _id, _amount);\\n    }\\n\\n    /**\\n     * @dev Updates the state to receive a child\\n     * @param _tokenId The token receiving the child\\n     * @param _childContract The ERC1155 contract of the child token\\n     * @param _childTokenId The token id that is being transferred to the parent\\n     * @param _amount The amount of the token that is being transferred\\n     */\\n    function _receive1155Child(\\n        uint256 _tokenId,\\n        address _childContract,\\n        uint256 _childTokenId,\\n        uint256 _amount\\n    ) internal virtual {\\n        require(_exists(_tokenId), \\\"bundle tokenId does not exist\\\");\\n        uint256 childTokensLength = childTokens[_tokenId][_childContract].length();\\n        if (childTokensLength == 0) {\\n            childContracts[_tokenId].add(_childContract);\\n        }\\n        childTokens[_tokenId][_childContract].add(_childTokenId);\\n        balances[_tokenId][_childContract][_childTokenId] += _amount;\\n    }\\n\\n    /**\\n     * @notice Validates the transfer of a 1155 child\\n     * @param _fromTokenId The owning token to transfer from\\n     */\\n    function _validate1155ChildTransfer(uint256 _fromTokenId) internal virtual {\\n        _validateTransferSender(_fromTokenId);\\n    }\\n\\n    /**\\n     * @notice Updates the state to remove a ERC1155 child\\n     * @param _tokenId The owning token to transfer from\\n     * @param _childContract The ERC1155 contract of the child token\\n     * @param _childTokenId The tokenId of the token that is being transferred\\n     * @param _amount The amount of the token that is being transferred\\n     */\\n    function _remove1155Child(\\n        uint256 _tokenId,\\n        address _childContract,\\n        uint256 _childTokenId,\\n        uint256 _amount\\n    ) internal virtual {\\n        require(\\n            _amount != 0 && balances[_tokenId][_childContract][_childTokenId] >= _amount,\\n            \\\"insufficient child balance for transfer\\\"\\n        );\\n        balances[_tokenId][_childContract][_childTokenId] -= _amount;\\n\\n        if (balances[_tokenId][_childContract][_childTokenId] == 0) {\\n            // remove child token\\n            childTokens[_tokenId][_childContract].remove(_childTokenId);\\n\\n            // remove contract\\n            if (childTokens[_tokenId][_childContract].length() == 0) {\\n                childContracts[_tokenId].remove(_childContract);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe88c945e041e29bc49ece641035a63e99e7a255f0a4decb85d67c28087264050\",\"license\":\"BUSL-1.1\"},\"contracts/composable/ERC998ERC20Extension.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"./ERC998TopDown.sol\\\";\\nimport \\\"../interfaces/IERC998ERC20TopDown.sol\\\";\\nimport \\\"../interfaces/IERC998ERC20TopDownEnumerable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\\\";\\n\\n/**\\n * @title ERC998ERC20Extension\\n * @author NFTfi\\n * @dev ERC998TopDown extension to support ERC20 children\\n */\\nabstract contract ERC998ERC20Extension is ERC998TopDown, IERC998ERC20TopDown, IERC998ERC20TopDownEnumerable {\\n    using SafeERC20 for IERC20;\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    // tokenId => ERC20 child contract\\n    mapping(uint256 => EnumerableSet.AddressSet) internal erc20ChildContracts;\\n\\n    // tokenId => (token contract => balance)\\n    mapping(uint256 => mapping(address => uint256)) internal erc20Balances;\\n\\n    /**\\n     * @dev Look up the balance of ERC20 tokens for a specific token and ERC20 contract\\n     * @param _tokenId The token that owns the ERC20 tokens\\n     * @param _erc20Contract The ERC20 contract\\n     * @return The number of ERC20 tokens owned by a token\\n     */\\n    function balanceOfERC20(uint256 _tokenId, address _erc20Contract) external view virtual override returns (uint256) {\\n        return erc20Balances[_tokenId][_erc20Contract];\\n    }\\n\\n    /**\\n     * @notice Get ERC20 contract by tokenId and index\\n     * @param _tokenId The parent token of ERC20 tokens\\n     * @param _index The index position of the child contract\\n     * @return childContract The contract found at the tokenId and index\\n     */\\n    function erc20ContractByIndex(uint256 _tokenId, uint256 _index) external view virtual override returns (address) {\\n        return erc20ChildContracts[_tokenId].at(_index);\\n    }\\n\\n    /**\\n     * @notice Get the total number of ERC20 tokens owned by tokenId\\n     * @param _tokenId The parent token of ERC20 tokens\\n     * @return uint256 The total number of ERC20 tokens\\n     */\\n    function totalERC20Contracts(uint256 _tokenId) external view virtual override returns (uint256) {\\n        return erc20ChildContracts[_tokenId].length();\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 _interfaceId) public view virtual override(ERC998TopDown) returns (bool) {\\n        return\\n            _interfaceId == type(IERC998ERC20TopDown).interfaceId ||\\n            _interfaceId == type(IERC998ERC20TopDownEnumerable).interfaceId ||\\n            super.supportsInterface(_interfaceId);\\n    }\\n\\n    /**\\n     * @notice Transfer ERC20 tokens to address\\n     * @param _tokenId The token to transfer from\\n     * @param _to The address to send the ERC20 tokens to\\n     * @param _erc20Contract The ERC20 contract\\n     * @param _value The number of ERC20 tokens to transfer\\n     */\\n    function transferERC20(\\n        uint256 _tokenId,\\n        address _to,\\n        address _erc20Contract,\\n        uint256 _value\\n    ) external virtual override {\\n        _validateERC20Value(_value);\\n        _validateReceiver(_to);\\n        _validateERC20Transfer(_tokenId);\\n        _removeERC20(_tokenId, _erc20Contract, _value);\\n\\n        IERC20(_erc20Contract).safeTransfer(_to, _value);\\n        emit TransferERC20(_tokenId, _to, _erc20Contract, _value);\\n    }\\n\\n    /**\\n     * @notice Get ERC20 tokens from ERC20 contract.\\n     * @dev This contract has to be approved first by _erc20Contract\\n     */\\n    function getERC20(\\n        address,\\n        uint256,\\n        address,\\n        uint256\\n    ) external pure override {\\n        revert(\\\"external calls restricted\\\");\\n    }\\n\\n    /**\\n     * @notice NOT SUPPORTED\\n     * Intended to transfer ERC223 tokens. ERC223 tokens can be transferred as regular ERC20\\n     */\\n    function transferERC223(\\n        uint256,\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external virtual override {\\n        revert(\\\"TRANSFER_ERC223_NOT_SUPPORTED\\\");\\n    }\\n\\n    /**\\n     * @notice NOT SUPPORTED\\n     * Intended to receive ERC223 tokens. ERC223 tokens can be deposited as regular ERC20\\n     */\\n    function tokenFallback(\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external virtual override {\\n        revert(\\\"TOKEN_FALLBACK_ERC223_NOT_SUPPORTED\\\");\\n    }\\n\\n    /**\\n     * @notice Get ERC20 tokens from ERC20 contract.\\n     * @dev This contract has to be approved first by _erc20Contract\\n     * @param _from The current owner address of the ERC20 tokens that are being transferred.\\n     * @param _tokenId The token to transfer the ERC20 tokens to.\\n     * @param _erc20Contract The ERC20 token contract\\n     * @param _value The number of ERC20 tokens to transfer\\n     */\\n    function _getERC20(\\n        address _from,\\n        uint256 _tokenId,\\n        address _erc20Contract,\\n        uint256 _value\\n    ) internal {\\n        _validateERC20Value(_value);\\n        _receiveErc20Child(_from, _tokenId, _erc20Contract, _value);\\n        IERC20(_erc20Contract).safeTransferFrom(_from, address(this), _value);\\n    }\\n\\n    /**\\n     * @notice Validates the value of a ERC20 transfer\\n     * @param _value The number of ERC20 tokens to transfer\\n     */\\n    function _validateERC20Value(uint256 _value) internal virtual {\\n        require(_value > 0, \\\"zero amount\\\");\\n    }\\n\\n    /**\\n     * @notice Validates the transfer of a ERC20\\n     * @param _fromTokenId The owning token to transfer from\\n     */\\n    function _validateERC20Transfer(uint256 _fromTokenId) internal virtual {\\n        _validateTransferSender(_fromTokenId);\\n    }\\n\\n    /**\\n     * @notice Store data for the received ERC20\\n     * @param _from The current owner address of the ERC20 tokens that are being transferred.\\n     * @param _tokenId The token to transfer the ERC20 tokens to.\\n     * @param _erc20Contract The ERC20 token contract\\n     * @param _value The number of ERC20 tokens to transfer\\n     */\\n    function _receiveErc20Child(\\n        address _from,\\n        uint256 _tokenId,\\n        address _erc20Contract,\\n        uint256 _value\\n    ) internal virtual {\\n        require(_exists(_tokenId), \\\"bundle tokenId does not exist\\\");\\n        uint256 erc20Balance = erc20Balances[_tokenId][_erc20Contract];\\n        if (erc20Balance == 0) {\\n            erc20ChildContracts[_tokenId].add(_erc20Contract);\\n        }\\n        erc20Balances[_tokenId][_erc20Contract] += _value;\\n        emit ReceivedERC20(_from, _tokenId, _erc20Contract, _value);\\n    }\\n\\n    /**\\n     * @notice Updates the state to remove ERC20 tokens\\n     * @param _tokenId The token to transfer from\\n     * @param _erc20Contract The ERC20 contract\\n     * @param _value The number of ERC20 tokens to transfer\\n     */\\n    function _removeERC20(\\n        uint256 _tokenId,\\n        address _erc20Contract,\\n        uint256 _value\\n    ) internal virtual {\\n        uint256 erc20Balance = erc20Balances[_tokenId][_erc20Contract];\\n        require(erc20Balance >= _value, \\\"not enough token available to transfer\\\");\\n        uint256 newERC20Balance = erc20Balance - _value;\\n        erc20Balances[_tokenId][_erc20Contract] = newERC20Balance;\\n        if (newERC20Balance == 0) {\\n            erc20ChildContracts[_tokenId].remove(_erc20Contract);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x722595fd9267aa2b1267496f6f3a1aab33aad5e7046c99122985da0803bcddec\",\"license\":\"BUSL-1.1\"},\"contracts/composable/ERC998TopDown.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\nimport \\\"../interfaces/IERC998ERC721TopDown.sol\\\";\\nimport \\\"../interfaces/IERC998ERC721TopDownEnumerable.sol\\\";\\n\\n/**\\n * @title ERC998TopDown\\n * @author NFTfi\\n * @dev ERC998ERC721 Top-Down Composable Non-Fungible Token.\\n * See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-998.md\\n * This implementation does not support children to be nested bundles, erc20 nor bottom-up\\n */\\nabstract contract ERC998TopDown is\\n    ERC721Enumerable,\\n    IERC998ERC721TopDown,\\n    IERC998ERC721TopDownEnumerable,\\n    ReentrancyGuard\\n{\\n    using Address for address;\\n    using EnumerableSet for EnumerableSet.UintSet;\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    // return this.rootOwnerOf.selector ^ this.rootOwnerOfChild.selector ^\\n    //   this.tokenOwnerOf.selector ^ this.ownerOfChild.selector;\\n    bytes32 public constant ERC998_MAGIC_VALUE = 0xcd740db500000000000000000000000000000000000000000000000000000000;\\n    bytes32 internal constant ERC998_MAGIC_MASK = 0xffffffff00000000000000000000000000000000000000000000000000000000;\\n\\n    uint256 public tokenCount = 0;\\n\\n    // tokenId => child contract\\n    mapping(uint256 => EnumerableSet.AddressSet) internal childContracts;\\n\\n    // tokenId => (child address => array of child tokens)\\n    mapping(uint256 => mapping(address => EnumerableSet.UintSet)) internal childTokens;\\n\\n    // child address => childId => tokenId\\n    // this is used for ERC721 type tokens\\n    mapping(address => mapping(uint256 => uint256)) internal childTokenOwner;\\n\\n    /**\\n     * @notice Tells whether the ERC721 type child exists or not\\n     * @param _childContract The contract address of the child token\\n     * @param _childTokenId The tokenId of the child\\n     * @return True if the child exists, false otherwise\\n     */\\n    function childExists(address _childContract, uint256 _childTokenId) external view virtual returns (bool) {\\n        uint256 tokenId = childTokenOwner[_childContract][_childTokenId];\\n        return tokenId != 0;\\n    }\\n\\n    /**\\n     * @notice Get the total number of child contracts with tokens that are owned by _tokenId\\n     * @param _tokenId The parent token of child tokens in child contracts\\n     * @return uint256 The total number of child contracts with tokens owned by _tokenId\\n     */\\n    function totalChildContracts(uint256 _tokenId) external view virtual override returns (uint256) {\\n        return childContracts[_tokenId].length();\\n    }\\n\\n    /**\\n     * @notice Get child contract by tokenId and index\\n     * @param _tokenId The parent token of child tokens in child contract\\n     * @param _index The index position of the child contract\\n     * @return childContract The contract found at the _tokenId and index\\n     */\\n    function childContractByIndex(uint256 _tokenId, uint256 _index)\\n        external\\n        view\\n        virtual\\n        override\\n        returns (address childContract)\\n    {\\n        return childContracts[_tokenId].at(_index);\\n    }\\n\\n    /**\\n     * @notice Get the total number of child tokens owned by tokenId that exist in a child contract\\n     * @param _tokenId The parent token of child tokens\\n     * @param _childContract The child contract containing the child tokens\\n     * @return uint256 The total number of child tokens found in child contract that are owned by _tokenId\\n     */\\n    function totalChildTokens(uint256 _tokenId, address _childContract) external view override returns (uint256) {\\n        return childTokens[_tokenId][_childContract].length();\\n    }\\n\\n    /**\\n     * @notice Get child token owned by _tokenId, in child contract, at index position\\n     * @param _tokenId The parent token of the child token\\n     * @param _childContract The child contract of the child token\\n     * @param _index The index position of the child token\\n     * @return childTokenId The child tokenId for the parent token, child token and index\\n     */\\n    function childTokenByIndex(\\n        uint256 _tokenId,\\n        address _childContract,\\n        uint256 _index\\n    ) external view virtual override returns (uint256 childTokenId) {\\n        return childTokens[_tokenId][_childContract].at(_index);\\n    }\\n\\n    /**\\n     * @notice Get the parent tokenId and its owner of a ERC721 child token\\n     * @param _childContract The contract address of the child token\\n     * @param _childTokenId The tokenId of the child\\n     * @return parentTokenOwner The parent address of the parent token and ERC998 magic value\\n     * @return parentTokenId The parent tokenId of _childTokenId\\n     */\\n    function ownerOfChild(address _childContract, uint256 _childTokenId)\\n        external\\n        view\\n        virtual\\n        override\\n        returns (bytes32 parentTokenOwner, uint256 parentTokenId)\\n    {\\n        parentTokenId = childTokenOwner[_childContract][_childTokenId];\\n        require(parentTokenId != 0, \\\"owner of child not found\\\");\\n        address parentTokenOwnerAddress = ownerOf(parentTokenId);\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            parentTokenOwner := or(ERC998_MAGIC_VALUE, parentTokenOwnerAddress)\\n        }\\n    }\\n\\n    /**\\n     * @notice Get the root owner of tokenId\\n     * @param _tokenId The token to query for a root owner address\\n     * @return rootOwner The root owner at the top of tree of tokens and ERC998 magic value.\\n     */\\n    function rootOwnerOf(uint256 _tokenId) public view virtual override returns (bytes32 rootOwner) {\\n        return rootOwnerOfChild(address(0), _tokenId);\\n    }\\n\\n    /**\\n     * @notice Get the root owner of a child token\\n     * @dev Returns the owner at the top of the tree of composables\\n     * Use Cases handled:\\n     * - Case 1: Token owner is this contract and token.\\n     * - Case 2: Token owner is other external top-down composable\\n     * - Case 3: Token owner is other contract\\n     * - Case 4: Token owner is user\\n     * @param _childContract The contract address of the child token\\n     * @param _childTokenId The tokenId of the child\\n     * @return rootOwner The root owner at the top of tree of tokens and ERC998 magic value\\n     */\\n    function rootOwnerOfChild(address _childContract, uint256 _childTokenId)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (bytes32 rootOwner)\\n    {\\n        address rootOwnerAddress;\\n        if (_childContract != address(0)) {\\n            (rootOwnerAddress, _childTokenId) = _ownerOfChild(_childContract, _childTokenId);\\n        } else {\\n            rootOwnerAddress = ownerOf(_childTokenId);\\n        }\\n\\n        if (rootOwnerAddress.isContract()) {\\n            try IERC998ERC721TopDown(rootOwnerAddress).rootOwnerOfChild(address(this), _childTokenId) returns (\\n                bytes32 returnedRootOwner\\n            ) {\\n                // Case 2: Token owner is other external top-down composable\\n                if (returnedRootOwner & ERC998_MAGIC_MASK == ERC998_MAGIC_VALUE) {\\n                    return returnedRootOwner;\\n                }\\n            } catch {\\n                // solhint-disable-previous-line no-empty-blocks\\n            }\\n        }\\n\\n        // Case 3: Token owner is other contract\\n        // Or\\n        // Case 4: Token owner is user\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            rootOwner := or(ERC998_MAGIC_VALUE, rootOwnerAddress)\\n        }\\n        return rootOwner;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     * The interface id 0x1efdf36a is added. The spec claims it to be the interface id of IERC998ERC721TopDown.\\n     * But it is not.\\n     * It is added anyway in case some contract checks it being compliant with the spec.\\n     */\\n    function supportsInterface(bytes4 _interfaceId) public view virtual override(ERC721Enumerable) returns (bool) {\\n        return\\n            _interfaceId == type(IERC998ERC721TopDown).interfaceId ||\\n            _interfaceId == type(IERC998ERC721TopDownEnumerable).interfaceId ||\\n            _interfaceId == 0x1efdf36a ||\\n            super.supportsInterface(_interfaceId);\\n    }\\n\\n    /**\\n     * @notice Mints a new bundle\\n     * @param _to The address that owns the new bundle\\n     * @return The id of the new bundle\\n     */\\n    function _safeMint(address _to) internal returns (uint256) {\\n        uint256 id = ++tokenCount;\\n        _safeMint(_to, id);\\n\\n        return id;\\n    }\\n\\n    /**\\n     * @notice Transfer child token from top-down composable to address\\n     * @param _fromTokenId The owning token to transfer from\\n     * @param _to The address that receives the child token\\n     * @param _childContract The ERC721 contract of the child token\\n     * @param _childTokenId The tokenId of the token that is being transferred\\n     */\\n    function safeTransferChild(\\n        uint256 _fromTokenId,\\n        address _to,\\n        address _childContract,\\n        uint256 _childTokenId\\n    ) external virtual override nonReentrant {\\n        _transferChild(_fromTokenId, _to, _childContract, _childTokenId);\\n        IERC721(_childContract).safeTransferFrom(address(this), _to, _childTokenId);\\n        emit TransferChild(_fromTokenId, _to, _childContract, _childTokenId);\\n    }\\n\\n    /**\\n     * @notice Transfer child token from top-down composable to address or other top-down composable\\n     * @param _fromTokenId The owning token to transfer from\\n     * @param _to The address that receives the child token\\n     * @param _childContract The ERC721 contract of the child token\\n     * @param _childTokenId The tokenId of the token that is being transferred\\n     * @param _data Additional data with no specified format\\n     */\\n    function safeTransferChild(\\n        uint256 _fromTokenId,\\n        address _to,\\n        address _childContract,\\n        uint256 _childTokenId,\\n        bytes memory _data\\n    ) external virtual override nonReentrant {\\n        _transferChild(_fromTokenId, _to, _childContract, _childTokenId);\\n        if (_to == address(this)) {\\n            _validateAndReceiveChild(msg.sender, _childContract, _childTokenId, _data);\\n        } else {\\n            IERC721(_childContract).safeTransferFrom(address(this), _to, _childTokenId, _data);\\n            emit TransferChild(_fromTokenId, _to, _childContract, _childTokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfer child token from top-down composable to address\\n     * @param _fromTokenId The owning token to transfer from\\n     * @param _to The address that receives the child token\\n     * @param _childContract The ERC721 contract of the child token\\n     * @param _childTokenId The tokenId of the token that is being transferred\\n     */\\n    function transferChild(\\n        uint256 _fromTokenId,\\n        address _to,\\n        address _childContract,\\n        uint256 _childTokenId\\n    ) external virtual override nonReentrant {\\n        _transferChild(_fromTokenId, _to, _childContract, _childTokenId);\\n        _oldNFTsTransfer(_to, _childContract, _childTokenId);\\n        emit TransferChild(_fromTokenId, _to, _childContract, _childTokenId);\\n    }\\n\\n    /**\\n     * @notice NOT SUPPORTED\\n     * Intended to transfer bottom-up composable child token from top-down composable to other ERC721 token.\\n     */\\n    function transferChildToParent(\\n        uint256,\\n        address,\\n        uint256,\\n        address,\\n        uint256,\\n        bytes memory\\n    ) external pure override {\\n        revert(\\\"BOTTOM_UP_CHILD_NOT_SUPPORTED\\\");\\n    }\\n\\n    /**\\n     * @notice Transfer a child token from an ERC721 contract to a composable. Used for old tokens that does not\\n     * have a safeTransferFrom method like cryptokitties\\n     */\\n    function getChild(\\n        address,\\n        uint256,\\n        address,\\n        uint256\\n    ) external pure override {\\n        revert(\\\"external calls restricted\\\");\\n    }\\n\\n    /**\\n     * @notice Transfer a child token from an ERC721 contract to a composable. Used for old tokens that does not\\n     * have a safeTransferFrom method like cryptokitties\\n     * @dev This contract has to be approved first in _childContract\\n     * @param _from The address that owns the child token.\\n     * @param _tokenId The token that becomes the parent owner\\n     * @param _childContract The ERC721 contract of the child token\\n     * @param _childTokenId The tokenId of the child token\\n     */\\n    function _getChild(\\n        address _from,\\n        uint256 _tokenId,\\n        address _childContract,\\n        uint256 _childTokenId\\n    ) internal virtual nonReentrant {\\n        _receiveChild(_from, _tokenId, _childContract, _childTokenId);\\n        IERC721(_childContract).transferFrom(_from, address(this), _childTokenId);\\n    }\\n\\n    /**\\n     * @notice A token receives a child token\\n     * param The address that caused the transfer\\n     * @param _from The owner of the child token\\n     * @param _childTokenId The token that is being transferred to the parent\\n     * @param _data Up to the first 32 bytes contains an integer which is the receiving parent tokenId\\n     * @return the selector of this method\\n     */\\n    function onERC721Received(\\n        address,\\n        address _from,\\n        uint256 _childTokenId,\\n        bytes calldata _data\\n    ) external virtual override nonReentrant returns (bytes4) {\\n        _validateAndReceiveChild(_from, msg.sender, _childTokenId, _data);\\n        return this.onERC721Received.selector;\\n    }\\n\\n    /**\\n     * @dev ERC721 implementation hook that is called before any token transfer. Prevents nested bundles\\n     * @param _from address of the current owner of the token\\n     * @param _to destination address\\n     * @param _tokenId id of the token to transfer\\n     */\\n    function _beforeTokenTransfer(\\n        address _from,\\n        address _to,\\n        uint256 _tokenId\\n    ) internal virtual override {\\n        require(_to != address(this), \\\"nested bundles not allowed\\\");\\n        super._beforeTokenTransfer(_from, _to, _tokenId);\\n    }\\n\\n    /**\\n     * @dev Validates the child transfer parameters and remove the child from the bundle\\n     * @param _fromTokenId The owning token to transfer from\\n     * @param _to The address that receives the child token\\n     * @param _childContract The ERC721 contract of the child token\\n     * @param _childTokenId The tokenId of the token that is being transferred\\n     */\\n    function _transferChild(\\n        uint256 _fromTokenId,\\n        address _to,\\n        address _childContract,\\n        uint256 _childTokenId\\n    ) internal virtual {\\n        _validateReceiver(_to);\\n        _validateChildTransfer(_fromTokenId, _childContract, _childTokenId);\\n        _removeChild(_fromTokenId, _childContract, _childTokenId);\\n    }\\n\\n    /**\\n     * @dev Validates the child transfer parameters\\n     * @param _fromTokenId The owning token to transfer from\\n     * @param _childContract The ERC721 contract of the child token\\n     * @param _childTokenId The tokenId of the token that is being transferred\\n     */\\n    function _validateChildTransfer(\\n        uint256 _fromTokenId,\\n        address _childContract,\\n        uint256 _childTokenId\\n    ) internal virtual {\\n        uint256 tokenId = childTokenOwner[_childContract][_childTokenId];\\n        require(tokenId != 0, \\\"_transferChild _childContract _childTokenId not found\\\");\\n        require(tokenId == _fromTokenId, \\\"ComposableTopDown: _transferChild wrong tokenId found\\\");\\n        _validateTransferSender(tokenId);\\n    }\\n\\n    /**\\n     * @dev Validates the receiver of a child transfer\\n     * @param _to The address that receives the child token\\n     */\\n    function _validateReceiver(address _to) internal virtual {\\n        require(_to != address(0), \\\"child transfer to zero address\\\");\\n    }\\n\\n    /**\\n     * @dev Updates the state to remove a child\\n     * @param _tokenId The owning token to transfer from\\n     * @param _childContract The ERC721 contract of the child token\\n     * @param _childTokenId The tokenId of the token that is being transferred\\n     */\\n    function _removeChild(\\n        uint256 _tokenId,\\n        address _childContract,\\n        uint256 _childTokenId\\n    ) internal virtual {\\n        // remove child token\\n        childTokens[_tokenId][_childContract].remove(_childTokenId);\\n        delete childTokenOwner[_childContract][_childTokenId];\\n\\n        // remove contract\\n        if (childTokens[_tokenId][_childContract].length() == 0) {\\n            childContracts[_tokenId].remove(_childContract);\\n        }\\n    }\\n\\n    /**\\n     * @dev Validates the data from a child transfer and receives it\\n     * @param _from The owner of the child token\\n     * @param _childContract The ERC721 contract of the child token\\n     * @param _childTokenId The token that is being transferred to the parent\\n     * @param _data Up to the first 32 bytes contains an integer which is the receiving parent tokenId\\n     */\\n    function _validateAndReceiveChild(\\n        address _from,\\n        address _childContract,\\n        uint256 _childTokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        require(_data.length > 0, \\\"data must contain tokenId to transfer the child token to\\\");\\n        // convert up to 32 bytes of _data to uint256, owner nft tokenId passed as uint in bytes\\n        uint256 tokenId = _parseTokenId(_data);\\n        _receiveChild(_from, tokenId, _childContract, _childTokenId);\\n    }\\n\\n    /**\\n     * @dev Update the state to receive a child\\n     * @param _from The owner of the child token\\n     * @param _tokenId The token receiving the child\\n     * @param _childContract The ERC721 contract of the child token\\n     * @param _childTokenId The token that is being transferred to the parent\\n     */\\n    function _receiveChild(\\n        address _from,\\n        uint256 _tokenId,\\n        address _childContract,\\n        uint256 _childTokenId\\n    ) internal virtual {\\n        require(_exists(_tokenId), \\\"bundle tokenId does not exist\\\");\\n        uint256 childTokensLength = childTokens[_tokenId][_childContract].length();\\n        if (childTokensLength == 0) {\\n            childContracts[_tokenId].add(_childContract);\\n        }\\n        childTokens[_tokenId][_childContract].add(_childTokenId);\\n        childTokenOwner[_childContract][_childTokenId] = _tokenId;\\n        emit ReceivedChild(_from, _tokenId, _childContract, _childTokenId);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of a child\\n     * @param _childContract The contract address of the child token\\n     * @param _childTokenId The tokenId of the child\\n     * @return parentTokenOwner The parent address of the parent token and ERC998 magic value\\n     * @return parentTokenId The parent tokenId of _childTokenId\\n     */\\n    function _ownerOfChild(address _childContract, uint256 _childTokenId)\\n        internal\\n        view\\n        virtual\\n        returns (address parentTokenOwner, uint256 parentTokenId)\\n    {\\n        parentTokenId = childTokenOwner[_childContract][_childTokenId];\\n        require(parentTokenId != 0, \\\"owner of child not found\\\");\\n        return (ownerOf(parentTokenId), parentTokenId);\\n    }\\n\\n    /**\\n     * @dev Convert up to 32 bytes of_data to uint256, owner nft tokenId passed as uint in bytes\\n     * @param _data Up to the first 32 bytes contains an integer which is the receiving parent tokenId\\n     * @return tokenId the token Id encoded in the data\\n     */\\n    function _parseTokenId(bytes memory _data) internal pure virtual returns (uint256 tokenId) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            tokenId := mload(add(_data, 0x20))\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers the NFT using method compatible with old token contracts\\n     * @param _to address of the receiver of the children\\n     * @param _childContract The contract address of the child token\\n     * @param _childTokenId The tokenId of the child\\n     */\\n    function _oldNFTsTransfer(\\n        address _to,\\n        address _childContract,\\n        uint256 _childTokenId\\n    ) internal {\\n        // This is here to be compatible with cryptokitties and other old contracts that require being owner and\\n        // approved before transferring.\\n        // Does not work with current standard which does not allow approving self, so we must let it fail in that case.\\n        try IERC721(_childContract).approve(address(this), _childTokenId) {\\n            // solhint-disable-previous-line no-empty-blocks\\n        } catch {\\n            // solhint-disable-previous-line no-empty-blocks\\n        }\\n\\n        IERC721(_childContract).transferFrom(address(this), _to, _childTokenId);\\n    }\\n\\n    /**\\n     * @notice Validates that the sender is authorized to perform a child transfer\\n     * @param _fromTokenId The owning token to transfer from\\n     */\\n    function _validateTransferSender(uint256 _fromTokenId) internal virtual {\\n        address rootOwner = address(uint160(uint256(rootOwnerOf(_fromTokenId))));\\n        require(\\n            rootOwner == msg.sender ||\\n                getApproved(_fromTokenId) == msg.sender ||\\n                isApprovedForAll(rootOwner, msg.sender),\\n            \\\"transferChild msg.sender not eligible\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x7b88a2c630a1fff5435b4165d5c7beb396fc75d9d3c8a57591f3214e8c560a04\",\"license\":\"BUSL-1.1\"},\"contracts/composable/NftfiBundler.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"./ERC9981155Extension.sol\\\";\\nimport \\\"./ERC998ERC20Extension.sol\\\";\\nimport \\\"../utils/ContractKeys.sol\\\";\\nimport \\\"../interfaces/IBundleBuilder.sol\\\";\\nimport \\\"../interfaces/INftfiBundler.sol\\\";\\nimport \\\"../interfaces/INftfiHub.sol\\\";\\nimport \\\"../interfaces/IPermittedNFTs.sol\\\";\\nimport \\\"../interfaces/IPermittedERC20s.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\n/**\\n * @title NftfiBundler\\n * @author NFTfi\\n * @dev ERC998 Top-Down Composable Non-Fungible Token that supports permitted ERC721, ERC1155 and ERC20 children.\\n */\\ncontract NftfiBundler is IBundleBuilder, ERC9981155Extension, ERC998ERC20Extension {\\n    using SafeERC20 for IERC20;\\n    using EnumerableSet for EnumerableSet.UintSet;\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    INftfiHub public immutable hub;\\n\\n    event NewBundle(uint256 bundleId, address indexed sender, address indexed receiver);\\n\\n    /**\\n     * @dev Stores the NftfiHub, name and symbol\\n     *\\n     * @param _nftfiHub Address of the NftfiHub contract\\n     * @param _name name of the token contract\\n     * @param _symbol symbol of the token contract\\n     */\\n    constructor(\\n        address _nftfiHub,\\n        string memory _name,\\n        string memory _symbol\\n    ) ERC721(_name, _symbol) {\\n        hub = INftfiHub(_nftfiHub);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 _interfaceId)\\n        public\\n        view\\n        virtual\\n        override(ERC9981155Extension, ERC998ERC20Extension)\\n        returns (bool)\\n    {\\n        return\\n            _interfaceId == type(IERC721Receiver).interfaceId ||\\n            _interfaceId == type(INftfiBundler).interfaceId ||\\n            super.supportsInterface(_interfaceId);\\n    }\\n\\n    /**\\n     * @notice Tells if an asset is permitted or not\\n     * @param _asset address of the asset\\n     * @return true if permitted, false otherwise\\n     */\\n    function permittedAsset(address _asset) public view returns (bool) {\\n        IPermittedNFTs permittedNFTs = IPermittedNFTs(hub.getContract(ContractKeys.PERMITTED_NFTS));\\n        return permittedNFTs.getNFTPermit(_asset) > 0;\\n    }\\n\\n    /**\\n     * @notice Tells if the erc20 is permitted or not\\n     * @param _erc20Contract address of the erc20\\n     * @return true if permitted, false otherwise\\n     */\\n    function permittedErc20Asset(address _erc20Contract) public view returns (bool) {\\n        IPermittedERC20s permittedERC20s = IPermittedERC20s(hub.getContract(ContractKeys.PERMITTED_BUNDLE_ERC20S));\\n        return permittedERC20s.getERC20Permit(_erc20Contract);\\n    }\\n\\n    /**\\n     * @dev used by the loan contract to build a bundle from the BundleElements struct at the beginning of a loan,\\n     * returns the id of the created bundle\\n     *\\n     * @param _bundleElements - the lists of erc721-20-1155 tokens that are to be bundled\\n     * @param _sender sender of the tokens in the bundle - the borrower\\n     * @param _receiver receiver of the created bundle, normally the loan contract\\n     */\\n    function buildBundle(\\n        BundleElements memory _bundleElements,\\n        address _sender,\\n        address _receiver\\n    ) external override returns (uint256) {\\n        uint256 bundleId = _safeMint(_receiver);\\n        require(\\n            _bundleElements.erc721s.length > 0 ||\\n                _bundleElements.erc20s.length > 0 ||\\n                _bundleElements.erc1155s.length > 0,\\n            \\\"bundle is empty\\\"\\n        );\\n        for (uint256 i = 0; i < _bundleElements.erc721s.length; i++) {\\n            if (_bundleElements.erc721s[i].safeTransferable) {\\n                IERC721(_bundleElements.erc721s[i].tokenContract).safeTransferFrom(\\n                    _sender,\\n                    address(this),\\n                    _bundleElements.erc721s[i].id,\\n                    abi.encodePacked(bundleId)\\n                );\\n            } else {\\n                _getChild(_sender, bundleId, _bundleElements.erc721s[i].tokenContract, _bundleElements.erc721s[i].id);\\n            }\\n        }\\n\\n        for (uint256 i = 0; i < _bundleElements.erc20s.length; i++) {\\n            _getERC20(_sender, bundleId, _bundleElements.erc20s[i].tokenContract, _bundleElements.erc20s[i].amount);\\n        }\\n\\n        for (uint256 i = 0; i < _bundleElements.erc1155s.length; i++) {\\n            IERC1155(_bundleElements.erc1155s[i].tokenContract).safeBatchTransferFrom(\\n                _sender,\\n                address(this),\\n                _bundleElements.erc1155s[i].ids,\\n                _bundleElements.erc1155s[i].amounts,\\n                abi.encodePacked(bundleId)\\n            );\\n        }\\n\\n        emit NewBundle(bundleId, _sender, _receiver);\\n        return bundleId;\\n    }\\n\\n    /**\\n     * @notice Remove all the children from the bundle\\n     * @dev This method may run out of gas if the list of children is too big. In that case, children can be removed\\n     *      individually.\\n     * @param _tokenId the id of the bundle\\n     * @param _receiver address of the receiver of the children\\n     */\\n    function decomposeBundle(uint256 _tokenId, address _receiver) external override nonReentrant {\\n        require(ownerOf(_tokenId) == msg.sender, \\\"caller is not owner\\\");\\n        _validateReceiver(_receiver);\\n\\n        // In each iteration all contracts children are removed, so eventually all contracts are removed\\n        while (childContracts[_tokenId].length() > 0) {\\n            address childContract = childContracts[_tokenId].at(0);\\n\\n            // In each iteration a child is removed, so eventually all contracts children are removed\\n            while (childTokens[_tokenId][childContract].length() > 0) {\\n                uint256 childId = childTokens[_tokenId][childContract].at(0);\\n\\n                uint256 balance = balances[_tokenId][childContract][childId];\\n\\n                if (balance > 0) {\\n                    _remove1155Child(_tokenId, childContract, childId, balance);\\n                    IERC1155(childContract).safeTransferFrom(address(this), _receiver, childId, balance, \\\"\\\");\\n                    emit Transfer1155Child(_tokenId, _receiver, childContract, childId, balance);\\n                } else {\\n                    _removeChild(_tokenId, childContract, childId);\\n\\n                    try IERC721(childContract).safeTransferFrom(address(this), _receiver, childId) {\\n                        // solhint-disable-previous-line no-empty-blocks\\n                    } catch {\\n                        _oldNFTsTransfer(_receiver, childContract, childId);\\n                    }\\n                    emit TransferChild(_tokenId, _receiver, childContract, childId);\\n                }\\n            }\\n        }\\n\\n        // In each iteration all contracts children are removed, so eventually all contracts are removed\\n        while (erc20ChildContracts[_tokenId].length() > 0) {\\n            address erc20Contract = erc20ChildContracts[_tokenId].at(0);\\n            uint256 balance = erc20Balances[_tokenId][erc20Contract];\\n\\n            _removeERC20(_tokenId, erc20Contract, balance);\\n            IERC20(erc20Contract).safeTransfer(_receiver, balance);\\n            emit TransferERC20(_tokenId, _receiver, erc20Contract, balance);\\n        }\\n    }\\n\\n    /**\\n     * @dev Update the state to receive a ERC721 child\\n     * Overrides the implementation to check if the asset is permitted\\n     * @param _from The owner of the child token\\n     * @param _tokenId The token receiving the child\\n     * @param _childContract The ERC721 contract of the child token\\n     * @param _childTokenId The token that is being transferred to the parent\\n     */\\n    function _receiveChild(\\n        address _from,\\n        uint256 _tokenId,\\n        address _childContract,\\n        uint256 _childTokenId\\n    ) internal virtual override {\\n        require(permittedAsset(_childContract), \\\"erc721 not permitted\\\");\\n        super._receiveChild(_from, _tokenId, _childContract, _childTokenId);\\n    }\\n\\n    /**\\n     * @dev Updates the state to receive a ERC1155 child\\n     * Overrides the implementation to check if the asset is permitted\\n     * @param _tokenId The token receiving the child\\n     * @param _childContract The ERC1155 contract of the child token\\n     * @param _childTokenId The token id that is being transferred to the parent\\n     * @param _amount The amount of the token that is being transferred\\n     */\\n    function _receive1155Child(\\n        uint256 _tokenId,\\n        address _childContract,\\n        uint256 _childTokenId,\\n        uint256 _amount\\n    ) internal virtual override {\\n        require(permittedAsset(_childContract), \\\"erc1155 not permitted\\\");\\n        super._receive1155Child(_tokenId, _childContract, _childTokenId, _amount);\\n    }\\n\\n    /**\\n     * @notice Store data for the received ERC20\\n     * @param _from The current owner address of the ERC20 tokens that are being transferred.\\n     * @param _tokenId The token to transfer the ERC20 tokens to.\\n     * @param _erc20Contract The ERC20 token contract\\n     * @param _value The number of ERC20 tokens to transfer\\n     */\\n    function _receiveErc20Child(\\n        address _from,\\n        uint256 _tokenId,\\n        address _erc20Contract,\\n        uint256 _value\\n    ) internal virtual override {\\n        require(permittedErc20Asset(_erc20Contract), \\\"erc20 not permitted\\\");\\n        super._receiveErc20Child(_from, _tokenId, _erc20Contract, _value);\\n    }\\n}\\n\",\"keccak256\":\"0xac723dd7f2d4303c8d01d8663349ac4deecb465704963a9351fe8140e96f72f9\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IBundleBuilder.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.4;\\n\\ninterface IBundleBuilder {\\n    /**\\n     * @notice data of a erc721 bundle element\\n     *\\n     * @param tokenContract - address of the token contract\\n     * @param id - id of the token\\n     * @param safeTransferable - wether the implementing token contract has a safeTransfer function or not\\n     */\\n    struct BundleElementERC721 {\\n        address tokenContract;\\n        uint256 id;\\n        bool safeTransferable;\\n    }\\n\\n    /**\\n     * @notice data of a erc20 bundle element\\n     *\\n     * @param tokenContract - address of the token contract\\n     * @param amount - amount of the token\\n     */\\n    struct BundleElementERC20 {\\n        address tokenContract;\\n        uint256 amount;\\n    }\\n\\n    /**\\n     * @notice data of a erc20 bundle element\\n     *\\n     * @param tokenContract - address of the token contract\\n     * @param ids - list of ids of the tokens\\n     * @param amounts - list amounts of the tokens\\n     */\\n    struct BundleElementERC1155 {\\n        address tokenContract;\\n        uint256[] ids;\\n        uint256[] amounts;\\n    }\\n\\n    /**\\n     * @notice the lists of erc721-20-1155 tokens that are to be bundled\\n     *\\n     * @param erc721s list of erc721 tokens\\n     * @param erc20s list of erc20 tokens\\n     * @param erc1155s list of erc1155 tokens\\n     */\\n    struct BundleElements {\\n        BundleElementERC721[] erc721s;\\n        BundleElementERC20[] erc20s;\\n        BundleElementERC1155[] erc1155s;\\n    }\\n\\n    /**\\n     * @notice used by the loan contract to build a bundle from the BundleElements struct at the beginning of a loan,\\n     * returns the id of the created bundle\\n     *\\n     * @param _bundleElements - the lists of erc721-20-1155 tokens that are to be bundled\\n     * @param _sender sender of the tokens in the bundle - the borrower\\n     * @param _receiver receiver of the created bundle, normally the loan contract\\n     */\\n    function buildBundle(\\n        BundleElements memory _bundleElements,\\n        address _sender,\\n        address _receiver\\n    ) external returns (uint256);\\n\\n    /**\\n     * @notice Remove all the children from the bundle\\n     * @dev This method may run out of gas if the list of children is too big. In that case, children can be removed\\n     *      individually.\\n     * @param _tokenId the id of the bundle\\n     * @param _receiver address of the receiver of the children\\n     */\\n    function decomposeBundle(uint256 _tokenId, address _receiver) external;\\n}\\n\",\"keccak256\":\"0x1d713506273bfd5119659bb6a1b52f4d4aa6665fd75a714a332c68640eba3e48\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IERC998ERC1155TopDown.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.4;\\n\\ninterface IERC998ERC1155TopDown {\\n    event Received1155Child(\\n        address indexed from,\\n        uint256 indexed toTokenId,\\n        address indexed childContract,\\n        uint256 childTokenId,\\n        uint256 amount\\n    );\\n    event Transfer1155Child(\\n        uint256 indexed fromTokenId,\\n        address indexed to,\\n        address indexed childContract,\\n        uint256 childTokenId,\\n        uint256 amount\\n    );\\n    event Transfer1155BatchChild(\\n        uint256 indexed fromTokenId,\\n        address indexed to,\\n        address indexed childContract,\\n        uint256[] childTokenIds,\\n        uint256[] amounts\\n    );\\n\\n    function safeTransferChild(\\n        uint256 fromTokenId,\\n        address to,\\n        address childContract,\\n        uint256 childTokenId,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    function safeBatchTransferChild(\\n        uint256 fromTokenId,\\n        address to,\\n        address childContract,\\n        uint256[] calldata childTokenIds,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n\\n    function childBalance(\\n        uint256 tokenId,\\n        address childContract,\\n        uint256 childTokenId\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x43d2fc61c87641ebbc217def243fce16f8878b70dbf3845092cd74e992c90125\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IERC998ERC20TopDown.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.4;\\n\\ninterface IERC998ERC20TopDown {\\n    event ReceivedERC20(\\n        address indexed _from,\\n        uint256 indexed _tokenId,\\n        address indexed _erc20Contract,\\n        uint256 _value\\n    );\\n    event TransferERC20(uint256 indexed _tokenId, address indexed _to, address indexed _erc20Contract, uint256 _value);\\n\\n    function balanceOfERC20(uint256 _tokenId, address __erc20Contract) external view returns (uint256);\\n\\n    function tokenFallback(\\n        address _from,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) external;\\n\\n    function transferERC20(\\n        uint256 _tokenId,\\n        address _to,\\n        address _erc20Contract,\\n        uint256 _value\\n    ) external;\\n\\n    function transferERC223(\\n        uint256 _tokenId,\\n        address _to,\\n        address _erc223Contract,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) external;\\n\\n    function getERC20(\\n        address _from,\\n        uint256 _tokenId,\\n        address _erc20Contract,\\n        uint256 _value\\n    ) external;\\n}\\n\",\"keccak256\":\"0x9624403df3d2d5eb3bcf2d236385217e2ae7c8a3e7014788f802608a856144d8\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IERC998ERC20TopDownEnumerable.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.4;\\n\\ninterface IERC998ERC20TopDownEnumerable {\\n    function totalERC20Contracts(uint256 _tokenId) external view returns (uint256);\\n\\n    function erc20ContractByIndex(uint256 _tokenId, uint256 _index) external view returns (address);\\n}\\n\",\"keccak256\":\"0xbbafc6f0fa28ba1c49b426433868c198ecd20c7403f476d4eb67a79e655564b8\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IERC998ERC721TopDown.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.4;\\n\\ninterface IERC998ERC721TopDown {\\n    event ReceivedChild(\\n        address indexed _from,\\n        uint256 indexed _tokenId,\\n        address indexed _childContract,\\n        uint256 _childTokenId\\n    );\\n    event TransferChild(\\n        uint256 indexed tokenId,\\n        address indexed _to,\\n        address indexed _childContract,\\n        uint256 _childTokenId\\n    );\\n\\n    function onERC721Received(\\n        address _operator,\\n        address _from,\\n        uint256 _childTokenId,\\n        bytes calldata _data\\n    ) external returns (bytes4);\\n\\n    function transferChild(\\n        uint256 _fromTokenId,\\n        address _to,\\n        address _childContract,\\n        uint256 _childTokenId\\n    ) external;\\n\\n    function safeTransferChild(\\n        uint256 _fromTokenId,\\n        address _to,\\n        address _childContract,\\n        uint256 _childTokenId\\n    ) external;\\n\\n    function safeTransferChild(\\n        uint256 _fromTokenId,\\n        address _to,\\n        address _childContract,\\n        uint256 _childTokenId,\\n        bytes memory _data\\n    ) external;\\n\\n    function transferChildToParent(\\n        uint256 _fromTokenId,\\n        address _toContract,\\n        uint256 _toTokenId,\\n        address _childContract,\\n        uint256 _childTokenId,\\n        bytes memory _data\\n    ) external;\\n\\n    // getChild function enables older contracts like cryptokitties to be transferred into a composable\\n    // The _childContract must approve this contract. Then getChild can be called.\\n    function getChild(\\n        address _from,\\n        uint256 _tokenId,\\n        address _childContract,\\n        uint256 _childTokenId\\n    ) external;\\n\\n    function rootOwnerOf(uint256 _tokenId) external view returns (bytes32 rootOwner);\\n\\n    function rootOwnerOfChild(address _childContract, uint256 _childTokenId) external view returns (bytes32 rootOwner);\\n\\n    function ownerOfChild(address _childContract, uint256 _childTokenId)\\n        external\\n        view\\n        returns (bytes32 parentTokenOwner, uint256 parentTokenId);\\n}\\n\",\"keccak256\":\"0xa778beda3f640ffec8db3253333339e41404118471f7fbc0488c36d459d300cd\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IERC998ERC721TopDownEnumerable.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.4;\\n\\ninterface IERC998ERC721TopDownEnumerable {\\n    function totalChildContracts(uint256 _tokenId) external view returns (uint256);\\n\\n    function childContractByIndex(uint256 _tokenId, uint256 _index) external view returns (address childContract);\\n\\n    function totalChildTokens(uint256 _tokenId, address _childContract) external view returns (uint256);\\n\\n    function childTokenByIndex(\\n        uint256 _tokenId,\\n        address _childContract,\\n        uint256 _index\\n    ) external view returns (uint256 childTokenId);\\n}\\n\",\"keccak256\":\"0x00e9e2a7b8de5b5194c71eedc50d2ab6413c4be1dc1e328272acc2060ab381ac\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/INftfiBundler.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"./IERC998ERC721TopDown.sol\\\";\\n\\ninterface INftfiBundler is IERC721 {\\n    function safeMint(address _to) external returns (uint256);\\n\\n    function decomposeBundle(uint256 _tokenId, address _receiver) external;\\n}\\n\",\"keccak256\":\"0x1782a96fee1a1e07d00bfbdb916d33ff29be002f8bfc6ece29b499a37d25347d\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/INftfiHub.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.4;\\n\\n/**\\n * @title INftfiHub\\n * @author NFTfi\\n * @dev NftfiHub interface\\n */\\ninterface INftfiHub {\\n    function setContract(string calldata _contractKey, address _contractAddress) external;\\n\\n    function getContract(bytes32 _contractKey) external view returns (address);\\n}\\n\",\"keccak256\":\"0x80259ebf45729166a8524b313741b6ea2acfe8ac9dc15243f018a08cc2b14240\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IPermittedERC20s.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.4;\\n\\ninterface IPermittedERC20s {\\n    function getERC20Permit(address _erc20) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xd159a7f11adfd21220c0acbb85917b5019a82d4912c2fecb20449b267ca9ca15\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IPermittedNFTs.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.4;\\n\\ninterface IPermittedNFTs {\\n    function setNFTPermit(address _nftContract, string memory _nftType) external;\\n\\n    function getNFTPermit(address _nftContract) external view returns (bytes32);\\n\\n    function getNFTWrapper(address _nftContract) external view returns (address);\\n}\\n\",\"keccak256\":\"0x84b4cf35a3ea9b4ffb1711d4268f5554c310d13788d88a7093991b5a74e68a50\",\"license\":\"BUSL-1.1\"},\"contracts/utils/ContractKeys.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.4;\\n\\n/**\\n * @title ContractKeys\\n * @author NFTfi\\n * @dev Common library for contract keys\\n */\\nlibrary ContractKeys {\\n    bytes32 public constant PERMITTED_ERC20S = bytes32(\\\"PERMITTED_ERC20S\\\");\\n    bytes32 public constant PERMITTED_NFTS = bytes32(\\\"PERMITTED_NFTS\\\");\\n    bytes32 public constant PERMITTED_PARTNERS = bytes32(\\\"PERMITTED_PARTNERS\\\");\\n    bytes32 public constant NFT_TYPE_REGISTRY = bytes32(\\\"NFT_TYPE_REGISTRY\\\");\\n    bytes32 public constant LOAN_REGISTRY = bytes32(\\\"LOAN_REGISTRY\\\");\\n    bytes32 public constant PERMITTED_SNFT_RECEIVER = bytes32(\\\"PERMITTED_SNFT_RECEIVER\\\");\\n    bytes32 public constant PERMITTED_BUNDLE_ERC20S = bytes32(\\\"PERMITTED_BUNDLE_ERC20S\\\");\\n    bytes32 public constant PERMITTED_AIRDROPS = bytes32(\\\"PERMITTED_AIRDROPS\\\");\\n    bytes32 public constant AIRDROP_RECEIVER = bytes32(\\\"AIRDROP_RECEIVER\\\");\\n    bytes32 public constant AIRDROP_FACTORY = bytes32(\\\"AIRDROP_FACTORY\\\");\\n    bytes32 public constant AIRDROP_FLASH_LOAN = bytes32(\\\"AIRDROP_FLASH_LOAN\\\");\\n    bytes32 public constant NFTFI_BUNDLER = bytes32(\\\"NFTFI_BUNDLER\\\");\\n\\n    string public constant AIRDROP_WRAPPER_STRING = \\\"AirdropWrapper\\\";\\n\\n    /**\\n     * @notice Returns the bytes32 representation of a string\\n     * @param _key the string key\\n     * @return id bytes32 representation\\n     */\\n    function getIdFromStringKey(string memory _key) external pure returns (bytes32 id) {\\n        require(bytes(_key).length <= 32, \\\"invalid key\\\");\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            id := mload(add(_key, 32))\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2fa7e704ddc4095a739ac5dca2cd49cb261f7b881778038398e9e7d5063c1a25\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x60a06040526000600b553480156200001657600080fd5b506040516200537f3803806200537f8339810160408190526200003991620001e1565b8151829082906200005290600090602085019062000088565b5080516200006890600190602084019062000088565b50506001600a5550505060601b6001600160601b031916608052620002ba565b828054620000969062000267565b90600052602060002090601f016020900481019282620000ba576000855562000105565b82601f10620000d557805160ff191683800117855562000105565b8280016001018555821562000105579182015b8281111562000105578251825591602001919060010190620000e8565b506200011392915062000117565b5090565b5b8082111562000113576000815560010162000118565b600082601f8301126200013f578081fd5b81516001600160401b03808211156200015c576200015c620002a4565b604051601f8301601f19908116603f01168101908282118183101715620001875762000187620002a4565b81604052838152602092508683858801011115620001a3578485fd5b8491505b83821015620001c65785820183015181830184015290820190620001a7565b83821115620001d757848385830101525b9695505050505050565b600080600060608486031215620001f6578283fd5b83516001600160a01b03811681146200020d578384fd5b60208501519093506001600160401b03808211156200022a578384fd5b62000238878388016200012e565b935060408601519150808211156200024e578283fd5b506200025d868287016200012e565b9150509250925092565b600181811c908216806200027c57607f821691505b602082108114156200029e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160601c615098620002e76000396000818161043501528181610af2015261157301526150986000f3fe608060405234801561001057600080fd5b50600436106102ab5760003560e01c80636352211e11610172578063b88d4fde116100d9578063d49d1bac11610092578063d49d1bac14610646578063df74908614610659578063e226ed221461066c578063e985e9c5146106a2578063eadb80b8146106b5578063ed81cdda146106dd578063f23a6e61146106f057600080fd5b8063b88d4fde146105e7578063ba6b5f96146102ed578063bc197c81146105fa578063bef44f181461060d578063c0ee0b8a14610620578063c87b56dd1461063357600080fd5b80638da7d0b51161012b5780638da7d0b51461058a57806395d89b411461059d5780639f181b5e146105a5578063a22cb465146105ae578063a6330851146105c1578063a7811732146105d457600080fd5b80636352211e14610518578063668037481461052b578063676a196a1461053e57806370a0823114610551578063830ef41b146105645780638d81f51e1461057757600080fd5b806322ab2e6f1161021657806342842e0e116101cf57806342842e0e1461045757806343a61a8e1461046a5780634f6ccce71461047d5780635680a3ad1461049057806360d4d23a146104c8578063627c81ff1461050557600080fd5b806322ab2e6f146103d657806323b872dd146103e45780632f745c59146103f7578063306d68881461040a57806335b21ceb1461041d578063365a86fc1461043057600080fd5b80630d5a621b116102685780630d5a621b14610348578063150b7a021461035b578063160b01a11461038757806318160ddd146103a85780631c9faae4146103b05780631d98f3c5146103c357600080fd5b806301ffc9a7146102b057806306fdde03146102d857806307cff6f2146102ed578063081812fc1461030257806308937f6214610322578063095ea7b314610335575b600080fd5b6102c36102be3660046145e9565b610703565b60405190151581526020015b60405180910390f35b6102e0610749565b6040516102cf9190614c99565b6103006102fb366004614515565b6107db565b005b610315610310366004614786565b6107fc565b6040516102cf9190614b45565b610300610330366004614a11565b610884565b6103006103433660046144ea565b6108cc565b610315610356366004614a73565b6109dd565b61036e61036936600461437e565b6109fc565b6040516001600160e01b031990911681526020016102cf565b61039a6103953660046149eb565b610a82565b6040519081526020016102cf565b60085461039a565b6102c36103be366004614225565b610ab6565b6103006103d1366004614873565b610beb565b61039a63cd740db560e01b81565b6103006103f236600461433e565b610cc8565b61039a6104053660046144ea565b610cf9565b6103006104183660046147c2565b610d8f565b61039a61042b36600461479e565b610f8e565b6103157f000000000000000000000000000000000000000000000000000000000000000081565b61030061046536600461433e565b610fb9565b61039a610478366004614786565b610fd4565b61039a61048b366004614786565b610fe1565b6102c361049e3660046144ea565b6001600160a01b03919091166000908152600e602090815260408083209383529290522054151590565b61039a6104d63660046149eb565b6000928352600f602090815260408085206001600160a01b039490941685529281528284209184525290205490565b610315610513366004614a73565b611082565b610315610526366004614786565b61109a565b61039a610539366004614621565b611111565b6102c361054c366004614225565b611540565b61039a61055f366004614225565b611677565b610300610572366004614873565b6116fe565b610300610585366004614923565b61178c565b61039a610598366004614786565b61188f565b6102e06118a6565b61039a600b5481565b6103006105bc3660046144bd565b6118b5565b6103006105cf36600461497d565b6118c4565b61039a6105e2366004614786565b6119e2565b6103006105f53660046143ee565b6119f9565b61036e610608366004614295565b611a31565b61030061061b366004614873565b611bc0565b61030061062e36600461455c565b611c33565b6102e0610641366004614786565b611c87565b6103006106543660046148aa565b611d5e565b61030061066736600461479e565b611da6565b61039a61067a36600461479e565b60009182526011602090815260408084206001600160a01b0393909316845291905290205490565b6102c36106b036600461425d565b612172565b6106c86106c33660046144ea565b6121a0565b604080519283526020830191909152016102cf565b61039a6106eb3660046144ea565b612200565b61036e6106fe366004614457565b6122f4565b60006001600160e01b03198216630a85bd0160e11b148061073457506001600160e01b03198216639fa4074560e01b145b8061074357506107438261230e565b92915050565b60606000805461075890614f86565b80601f016020809104026020016040519081016040528092919081815260200182805461078490614f86565b80156107d15780601f106107a6576101008083540402835291602001916107d1565b820191906000526020600020905b8154815290600101906020018083116107b457829003601f168201915b5050505050905090565b60405162461bcd60e51b81526004016107f390614e10565b60405180910390fd5b60006108078261234e565b6108685760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016107f3565b506000908152600460205260409020546001600160a01b031690565b60405162461bcd60e51b815260206004820152601d60248201527f424f54544f4d5f55505f4348494c445f4e4f545f535550504f5254454400000060448201526064016107f3565b60006108d78261109a565b9050806001600160a01b0316836001600160a01b031614156109455760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016107f3565b336001600160a01b038216148061096157506109618133612172565b6109ce5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b60648201526084016107f3565b6109d8838361236b565b505050565b6000828152600c602052604081206109f590836123d9565b9392505050565b60006002600a541415610a215760405162461bcd60e51b81526004016107f390614e43565b6002600a81905550610a6b85338686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506123e592505050565b50630a85bd0160e11b6001600a5595945050505050565b6000838152600d602090815260408083206001600160a01b03861684529091528120610aae90836123d9565b949350505050565b604051631c2d8fb360e31b8152765045524d49545445445f42554e444c455f45524332305360481b600482015260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e16c7d989060240160206040518083038186803b158015610b3457600080fd5b505afa158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c9190614241565b60405163439439df60e11b81529091506001600160a01b0382169063872873be90610b9b908690600401614b45565b60206040518083038186803b158015610bb357600080fd5b505afa158015610bc7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f591906145b5565b6002600a541415610c0e5760405162461bcd60e51b81526004016107f390614e43565b6002600a55610c1f84848484612428565b604051632142170760e11b81526001600160a01b038316906342842e0e90610c4f90309087908690600401614bb7565b600060405180830381600087803b158015610c6957600080fd5b505af1158015610c7d573d6000803e3d6000fd5b50505050816001600160a01b0316836001600160a01b03168560008051602061506c83398151915284604051610cb591815260200190565b60405180910390a450506001600a555050565b610cd23382612447565b610cee5760405162461bcd60e51b81526004016107f390614dbf565b6109d8838383612509565b6000610d0483611677565b8210610d665760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016107f3565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6002600a541415610db25760405162461bcd60e51b81526004016107f390614e43565b6002600a558151835114610e085760405162461bcd60e51b815260206004820152601f60248201527f69647320616e6420616d6f756e7473206c656e677468206d69736d617463680060448201526064016107f3565b610e11856126b0565b610e1a86612709565b60005b8351811015610ebb576000848281518110610e4857634e487b7160e01b600052603260045260246000fd5b602002602001015190506000848381518110610e7457634e487b7160e01b600052603260045260246000fd5b60200260200101519050610e8a89888484612712565b6001600160a01b038816301415610ea857610ea83388848488612889565b505080610eb490614fc1565b9050610e1d565b506001600160a01b0385163014610f8157604051631759616b60e11b81526001600160a01b03851690632eb2c2d690610f009030908990889088908890600401614b59565b600060405180830381600087803b158015610f1a57600080fd5b505af1158015610f2e573d6000803e3d6000fd5b50505050836001600160a01b0316856001600160a01b0316877fa797202f39afe67da4ce6b40162421384da6655bc2054c48cb0e08fbb6ea418c8686604051610f78929190614c6b565b60405180910390a45b50506001600a5550505050565b6000828152600d602090815260408083206001600160a01b038516845290915281206109f590612923565b6109d8838383604051806020016040528060008152506119f9565b6000610743600083612200565b6000610fec60085490565b821061104f5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016107f3565b6008828154811061107057634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b60008281526010602052604081206109f590836123d9565b6000818152600260205260408120546001600160a01b0316806107435760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016107f3565b60008061111d8361292d565b85515190915015158061113557506000856020015151115b8061114557506000856040015151115b6111835760405162461bcd60e51b815260206004820152600f60248201526e62756e646c6520697320656d70747960881b60448201526064016107f3565b60005b8551518110156113255785518051829081106111b257634e487b7160e01b600052603260045260246000fd5b602002602001015160400151156112a95785518051829081106111e557634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b031663b88d4fde86308960000151858151811061122557634e487b7160e01b600052603260045260246000fd5b6020026020010151602001518660405160200161124491815260200190565b6040516020818303038152906040526040518563ffffffff1660e01b81526004016112729493929190614bdb565b600060405180830381600087803b15801561128c57600080fd5b505af11580156112a0573d6000803e3d6000fd5b50505050611313565b6113138583886000015184815181106112d257634e487b7160e01b600052603260045260246000fd5b6020026020010151600001518960000151858151811061130257634e487b7160e01b600052603260045260246000fd5b602002602001015160200151612950565b8061131d81614fc1565b915050611186565b5060005b8560200151518110156113b2576113a085838860200151848151811061135f57634e487b7160e01b600052603260045260246000fd5b6020026020010151600001518960200151858151811061138f57634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516129f1565b806113aa81614fc1565b915050611329565b5060005b8560400151518110156114ea57856040015181815181106113e757634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b0316632eb2c2d686308960400151858151811061142757634e487b7160e01b600052603260045260246000fd5b6020026020010151602001518a60400151868151811061145757634e487b7160e01b600052603260045260246000fd5b6020026020010151604001518760405160200161147691815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016114a5959493929190614b59565b600060405180830381600087803b1580156114bf57600080fd5b505af11580156114d3573d6000803e3d6000fd5b5050505080806114e290614fc1565b9150506113b6565b50826001600160a01b0316846001600160a01b03167f63478a9ffc3ee02f60be7618f5ebcc24dca8fdfaf29503c1f812162a941afe548360405161153091815260200190565b60405180910390a3949350505050565b604051631c2d8fb360e31b81526d5045524d49545445445f4e46545360901b600482015260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e16c7d989060240160206040518083038186803b1580156115b557600080fd5b505afa1580156115c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ed9190614241565b604051636651f11d60e01b81529091506000906001600160a01b03831690636651f11d9061161f908790600401614b45565b60206040518083038186803b15801561163757600080fd5b505afa15801561164b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166f91906145d1565b119392505050565b60006001600160a01b0382166116e25760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016107f3565b506001600160a01b031660009081526003602052604090205490565b61170781612a1b565b611710836126b0565b61171984612709565b611724848383612a59565b6117386001600160a01b0383168483612b33565b816001600160a01b0316836001600160a01b0316857fa8352277873fc0d2b233b8127433da351a4164fa701ed6ff79655694222932c48460405161177e91815260200190565b60405180910390a450505050565b6002600a5414156117af5760405162461bcd60e51b81526004016107f390614e43565b6002600a556117c085858585612428565b6001600160a01b0384163014156117e2576117dd338484846123e5565b611883565b604051635c46a7ef60e11b81526001600160a01b0384169063b88d4fde90611814903090889087908790600401614bdb565b600060405180830381600087803b15801561182e57600080fd5b505af1158015611842573d6000803e3d6000fd5b50505050826001600160a01b0316846001600160a01b03168660008051602061506c8339815191528560405161187a91815260200190565b60405180910390a45b50506001600a55505050565b6000818152600c6020526040812061074390612923565b60606001805461075890614f86565b6118c0338383612b89565b5050565b6002600a5414156118e75760405162461bcd60e51b81526004016107f390614e43565b6002600a556118f5856126b0565b6118fe86612709565b61190a86858585612712565b6001600160a01b03851630141561192d576119283385858585612889565b610f81565b604051637921219560e11b81526001600160a01b0385169063f242432a906119619030908990889088908890600401614c18565b600060405180830381600087803b15801561197b57600080fd5b505af115801561198f573d6000803e3d6000fd5b50505050836001600160a01b0316856001600160a01b0316877f16b5931e3f21f56cbd2534ea6493edfadf9ec64d0413aa2f2a4f79be6d7c0da18686604051610f78929190918252602082015260400190565b600081815260106020526040812061074390612923565b611a033383612447565b611a1f5760405162461bcd60e51b81526004016107f390614dbf565b611a2b84848484612c54565b50505050565b60006002600a541415611a565760405162461bcd60e51b81526004016107f390614e43565b6002600a558151602014611a7c5760405162461bcd60e51b81526004016107f390614d67565b6000611a89836020015190565b905060005b8551811015611ba757611af18233888481518110611abc57634e487b7160e01b600052603260045260246000fd5b6020026020010151888581518110611ae457634e487b7160e01b600052603260045260246000fd5b6020026020010151612c87565b336001600160a01b031682886001600160a01b03167e9b022bed8cf61abc5e33a83d371c1cfe8bec72ea5cfe121648583c057c4a36898581518110611b4657634e487b7160e01b600052603260045260246000fd5b6020026020010151898681518110611b6e57634e487b7160e01b600052603260045260246000fd5b6020026020010151604051611b8d929190918252602082015260400190565b60405180910390a480611b9f81614fc1565b915050611a8e565b50506001600a555063bc197c8160e01b95945050505050565b6002600a541415611be35760405162461bcd60e51b81526004016107f390614e43565b6002600a55611bf484848484612428565b611bff838383612ce0565b816001600160a01b0316836001600160a01b03168560008051602061506c83398151915284604051610cb591815260200190565b60405162461bcd60e51b815260206004820152602360248201527f544f4b454e5f46414c4c4241434b5f4552433232335f4e4f545f535550504f5260448201526215115160ea1b60648201526084016107f3565b6060611c928261234e565b611cf65760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016107f3565b6000611d0d60408051602081019091526000815290565b90506000815111611d2d57604051806020016040528060008152506109f5565b80611d3784612da1565b604051602001611d48929190614b16565b6040516020818303038152906040529392505050565b60405162461bcd60e51b815260206004820152601d60248201527f5452414e534645525f4552433232335f4e4f545f535550504f5254454400000060448201526064016107f3565b6002600a541415611dc95760405162461bcd60e51b81526004016107f390614e43565b6002600a5533611dd88361109a565b6001600160a01b031614611e245760405162461bcd60e51b815260206004820152601360248201527231b0b63632b91034b9903737ba1037bbb732b960691b60448201526064016107f3565b611e2d816126b0565b6000828152600c60205260408120611e4490612923565b111561209a576000828152600c60205260408120611e6290826123d9565b90505b6000838152600d602090815260408083206001600160a01b03851684529091528120611e9090612923565b1115612094576000838152600d602090815260408083206001600160a01b03851684529091528120611ec290826123d9565b6000858152600f602090815260408083206001600160a01b038716845282528083208484529091529020549091508015611fdb57611f0285848484612712565b604051637921219560e11b81523060048201526001600160a01b038581166024830152604482018490526064820183905260a06084830152600060a483015284169063f242432a9060c401600060405180830381600087803b158015611f6757600080fd5b505af1158015611f7b573d6000803e3d6000fd5b50505050826001600160a01b0316846001600160a01b0316867f16b5931e3f21f56cbd2534ea6493edfadf9ec64d0413aa2f2a4f79be6d7c0da18585604051611fce929190918252602082015260400190565b60405180910390a461208d565b611fe6858484612eba565b604051632142170760e11b81526001600160a01b038416906342842e0e9061201690309088908790600401614bb7565b600060405180830381600087803b15801561203057600080fd5b505af1925050508015612041575060015b61205057612050848484612ce0565b826001600160a01b0316846001600160a01b03168660008051602061506c8339815191528560405161208491815260200190565b60405180910390a45b5050611e65565b50611e2d565b60008281526010602052604081206120b190612923565b11156121695760008281526010602052604081206120cf90826123d9565b60008481526011602090815260408083206001600160a01b0385168452909152902054909150612100848383612a59565b6121146001600160a01b0383168483612b33565b816001600160a01b0316836001600160a01b0316857fa8352277873fc0d2b233b8127433da351a4164fa701ed6ff79655694222932c48460405161215a91815260200190565b60405180910390a4505061209a565b50506001600a55565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6001600160a01b0382166000908152600e60209081526040808320848452909152812054806121e15760405162461bcd60e51b81526004016107f390614cfe565b60006121ec8261109a565b63cd740db560e01b17959194509092505050565b6000806001600160a01b038416156122255761221c8484612f43565b93509050612231565b61222e8361109a565b90505b6001600160a01b0381163b156122e4576040516376c0e6ed60e11b81526001600160a01b0382169063ed81cdda9061226f9030908790600401614c52565b60206040518083038186803b15801561228757600080fd5b505afa9250505080156122b7575060408051601f3d908101601f191682019092526122b4918101906145d1565b60015b6122c0576122e4565b6001600160e01b0319811663cd740db560e01b14156122e25791506107439050565b505b63cd740db560e01b179392505050565b600060405162461bcd60e51b81526004016107f390614e10565b60006001600160e01b03198216637294ffed60e01b148061233f57506001600160e01b0319821663c5fd96cd60e01b145b80610743575061074382612f97565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906123a08261109a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006109f58383612fd7565b60008151116124065760405162461bcd60e51b81526004016107f390614d67565b6000612413826020015190565b90506124218582868661300f565b5050505050565b612431836126b0565b61243c848383613067565b611a2b848383612eba565b60006124528261234e565b6124b35760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016107f3565b60006124be8361109a565b9050806001600160a01b0316846001600160a01b031614806124f95750836001600160a01b03166124ee846107fc565b6001600160a01b0316145b80610aae5750610aae8185612172565b826001600160a01b031661251c8261109a565b6001600160a01b0316146125805760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016107f3565b6001600160a01b0382166125e25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016107f3565b6125ed83838361316c565b6125f860008261236b565b6001600160a01b0383166000908152600360205260408120805460019290612621908490614f43565b90915550506001600160a01b038216600090815260036020526040812080546001929061264f908490614f17565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0381166127065760405162461bcd60e51b815260206004820152601e60248201527f6368696c64207472616e7366657220746f207a65726f2061646472657373000060448201526064016107f3565b50565b612706816131d0565b801580159061274b57506000848152600f602090815260408083206001600160a01b038716845282528083208584529091529020548111155b6127a75760405162461bcd60e51b815260206004820152602760248201527f696e73756666696369656e74206368696c642062616c616e636520666f7220746044820152663930b739b332b960c91b60648201526084016107f3565b6000848152600f602090815260408083206001600160a01b03871684528252808320858452909152812080548392906127e1908490614f43565b90915550506000848152600f602090815260408083206001600160a01b03871684528252808320858452909152902054611a2b576000848152600d602090815260408083206001600160a01b03871684529091529020612841908361326e565b506000848152600d602090815260408083206001600160a01b0387168452909152902061286d90612923565b611a2b576000848152600c60205260409020612421908461327a565b80516020146128aa5760405162461bcd60e51b81526004016107f390614d67565b60006128b7826020015190565b90506128c581868686612c87565b846001600160a01b031681876001600160a01b03167e9b022bed8cf61abc5e33a83d371c1cfe8bec72ea5cfe121648583c057c4a368787604051612913929190918252602082015260400190565b60405180910390a4505050505050565b6000610743825490565b600080600b6000815461293f90614fc1565b91829055509050610743838261328f565b6002600a5414156129735760405162461bcd60e51b81526004016107f390614e43565b6002600a556129848484848461300f565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd906129b490879030908690600401614bb7565b600060405180830381600087803b1580156129ce57600080fd5b505af11580156129e2573d6000803e3d6000fd5b50506001600a55505050505050565b6129fa81612a1b565b612a06848484846132a9565b611a2b6001600160a01b038316853084613300565b600081116127065760405162461bcd60e51b815260206004820152600b60248201526a1e995c9bc8185b5bdd5b9d60aa1b60448201526064016107f3565b60008381526011602090815260408083206001600160a01b038616845290915290205481811015612adb5760405162461bcd60e51b815260206004820152602660248201527f6e6f7420656e6f75676820746f6b656e20617661696c61626c6520746f20747260448201526530b739b332b960d11b60648201526084016107f3565b6000612ae78383614f43565b60008681526011602090815260408083206001600160a01b03891684529091529020819055905080612421576000858152601060205260409020612b2b908561327a565b505050505050565b6109d88363a9059cbb60e01b8484604051602401612b52929190614c52565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613321565b816001600160a01b0316836001600160a01b03161415612be75760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b60448201526064016107f3565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612c5f848484612509565b612c6b848484846133f3565b611a2b5760405162461bcd60e51b81526004016107f390614cac565b612c9083611540565b612cd45760405162461bcd60e51b8152602060048201526015602482015274195c98cc4c4d4d481b9bdd081c195c9b5a5d1d1959605a1b60448201526064016107f3565b611a2b84848484613500565b60405163095ea7b360e01b81526001600160a01b0383169063095ea7b390612d0e9030908590600401614c52565b600060405180830381600087803b158015612d2857600080fd5b505af1925050508015612d39575060015b506040516323b872dd60e01b81526001600160a01b038316906323b872dd90612d6a90309087908690600401614bb7565b600060405180830381600087803b158015612d8457600080fd5b505af1158015612d98573d6000803e3d6000fd5b50505050505050565b606081612dc55750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612def5780612dd981614fc1565b9150612de89050600a83614f2f565b9150612dc9565b6000816001600160401b03811115612e1757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015612e41576020820181803683370190505b5090505b8415610aae57612e56600183614f43565b9150612e63600a86614fdc565b612e6e906030614f17565b60f81b818381518110612e9157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350612eb3600a86614f2f565b9450612e45565b6000838152600d602090815260408083206001600160a01b03861684529091529020612ee6908261326e565b506001600160a01b0382166000818152600e602090815260408083208584528252808320839055868352600d825280832093835292905220612f2790612923565b6109d8576000838152600c60205260409020611a2b908361327a565b6001600160a01b0382166000908152600e6020908152604080832084845290915281205480612f845760405162461bcd60e51b81526004016107f390614cfe565b612f8d8161109a565b91505b9250929050565b60006001600160e01b0319821663f68ab2e360e01b1480612fc857506001600160e01b03198216630271189760e51b145b806107435750610743826135e4565b6000826000018281548110612ffc57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b61301882611540565b61305b5760405162461bcd60e51b8152602060048201526014602482015273195c98cdcc8c481b9bdd081c195c9b5a5d1d195960621b60448201526064016107f3565b611a2b8484848461363f565b6001600160a01b0382166000908152600e60209081526040808320848452909152902054806130f65760405162461bcd60e51b815260206004820152603560248201527f5f7472616e736665724368696c64205f6368696c64436f6e7472616374205f636044820152741a1a5b19151bdad95b9259081b9bdd08199bdd5b99605a1b60648201526084016107f3565b8381146131635760405162461bcd60e51b815260206004820152603560248201527f436f6d706f7361626c65546f70446f776e3a205f7472616e736665724368696c60448201527419081ddc9bdb99c81d1bdad95b925908199bdd5b99605a1b60648201526084016107f3565b611a2b816131d0565b6001600160a01b0382163014156131c55760405162461bcd60e51b815260206004820152601a60248201527f6e65737465642062756e646c6573206e6f7420616c6c6f77656400000000000060448201526064016107f3565b6109d8838383613745565b60006131db82610fd4565b90506001600160a01b0381163314806132045750336131f9836107fc565b6001600160a01b0316145b8061321457506132148133612172565b6118c05760405162461bcd60e51b815260206004820152602560248201527f7472616e736665724368696c64206d73672e73656e646572206e6f7420656c696044820152646769626c6560d81b60648201526084016107f3565b60006109f583836137fd565b60006109f5836001600160a01b0384166137fd565b6118c082826040518060200160405280600081525061391a565b6132b282610ab6565b6132f45760405162461bcd60e51b8152602060048201526013602482015272195c98cc8c081b9bdd081c195c9b5a5d1d1959606a1b60448201526064016107f3565b611a2b8484848461394d565b611a2b846323b872dd60e01b858585604051602401612b5293929190614bb7565b6000613376826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613a339092919063ffffffff16565b8051909150156109d8578080602001905181019061339491906145b5565b6109d85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107f3565b60006001600160a01b0384163b156134f557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290613437903390899088908890600401614bdb565b602060405180830381600087803b15801561345157600080fd5b505af1925050508015613481575060408051601f3d908101601f1916820190925261347e91810190614605565b60015b6134db573d8080156134af576040519150601f19603f3d011682016040523d82523d6000602084013e6134b4565b606091505b5080516134d35760405162461bcd60e51b81526004016107f390614cac565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610aae565b506001949350505050565b6135098461234e565b6135255760405162461bcd60e51b81526004016107f390614d30565b6000848152600d602090815260408083206001600160a01b0387168452909152812061355090612923565b905080613571576000858152600c6020526040902061356f9085613a42565b505b6000858152600d602090815260408083206001600160a01b0388168452909152902061359d9084613a57565b506000858152600f602090815260408083206001600160a01b03881684528252808320868452909152812080548492906135d8908490614f17565b90915550505050505050565b60006001600160e01b0319821663cde244d960e01b148061361557506001600160e01b031982166328d12bf960e21b145b806136305750630f7ef9b560e11b6001600160e01b03198316145b80610743575061074382613a63565b6136488361234e565b6136645760405162461bcd60e51b81526004016107f390614d30565b6000838152600d602090815260408083206001600160a01b0386168452909152812061368f90612923565b9050806136b0576000848152600c602052604090206136ae9084613a42565b505b6000848152600d602090815260408083206001600160a01b038716845290915290206136dc9083613a57565b506001600160a01b038381166000818152600e60209081526040808320878452825291829020889055905185815291928792908916917f0371ddf2288ad1ba92626a7e31c86a9d006e592cfe57d7d946ef08b13457c08b91015b60405180910390a45050505050565b6001600160a01b0383166137a05761379b81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6137c3565b816001600160a01b0316836001600160a01b0316146137c3576137c38382613a88565b6001600160a01b0382166137da576109d881613b25565b826001600160a01b0316826001600160a01b0316146109d8576109d88282613bfe565b60008181526001830160205260408120548015613910576000613821600183614f43565b855490915060009061383590600190614f43565b90508181146138b657600086600001828154811061386357634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508087600001848154811061389457634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b85548690806138d557634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610743565b6000915050610743565b6139248383613c42565b61393160008484846133f3565b6109d85760405162461bcd60e51b81526004016107f390614cac565b6139568361234e565b6139725760405162461bcd60e51b81526004016107f390614d30565b60008381526011602090815260408083206001600160a01b0386168452909152902054806139b45760008481526010602052604090206139b29084613a42565b505b60008481526011602090815260408083206001600160a01b0387168452909152812080548492906139e6908490614f17565b92505081905550826001600160a01b031684866001600160a01b03167f684ce28ace37552c6bfb98b7cceda8ed55327078eafb5dfb31218e08563827638560405161373691815260200190565b6060610aae8484600085613d81565b60006109f5836001600160a01b038416613eb2565b60006109f58383613eb2565b60006001600160e01b0319821663780e9d6360e01b1480610743575061074382613f01565b60006001613a9584611677565b613a9f9190614f43565b600083815260076020526040902054909150808214613af2576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090613b3790600190614f43565b60008381526009602052604081205460088054939450909284908110613b6d57634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508060088381548110613b9c57634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480613be257634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b6000613c0983611677565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b038216613c985760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016107f3565b613ca18161234e565b15613cee5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016107f3565b613cfa6000838361316c565b6001600160a01b0382166000908152600360205260408120805460019290613d23908490614f17565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b606082471015613de25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016107f3565b6001600160a01b0385163b613e395760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107f3565b600080866001600160a01b03168587604051613e559190614afa565b60006040518083038185875af1925050503d8060008114613e92576040519150601f19603f3d011682016040523d82523d6000602084013e613e97565b606091505b5091509150613ea7828286613f51565b979650505050505050565b6000818152600183016020526040812054613ef957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610743565b506000610743565b60006001600160e01b031982166380ac58cd60e01b1480613f3257506001600160e01b03198216635b5e139f60e01b145b8061074357506301ffc9a760e01b6001600160e01b0319831614610743565b60608315613f605750816109f5565b825115613f705782518084602001fd5b8160405162461bcd60e51b81526004016107f39190614c99565b8035613f9581615032565b919050565b600082601f830112613faa578081fd5b81356020613fbf613fba83614ef4565b614ec4565b80838252828201915082860187848660051b8901011115613fde578586fd5b855b8581101561408a5781356001600160401b0380821115613ffe578889fd5b908901906060828c03601f190181131561401657898afd5b61401e614e7a565b8884013561402b81615032565b81526040848101358481111561403f578c8dfd5b61404d8f8c8389010161411f565b838c015250918401359183831115614063578b8cfd5b6140718e8b8588010161411f565b9082015287525050509284019290840190600101613fe0565b5090979650505050505050565b600082601f8301126140a7578081fd5b813560206140b7613fba83614ef4565b80838252828201915082860187848660061b89010111156140d6578586fd5b855b8581101561408a57604080838b0312156140f0578788fd5b6140f8614ea2565b833561410381615032565b81528387013587820152855293850193909101906001016140d8565b600082601f83011261412f578081fd5b8135602061413f613fba83614ef4565b80838252828201915082860187848660051b890101111561415e578586fd5b855b8581101561408a57813584529284019290840190600101614160565b60008083601f84011261418d578182fd5b5081356001600160401b038111156141a3578182fd5b602083019150836020828501011115612f9057600080fd5b600082601f8301126141cb578081fd5b81356001600160401b038111156141e4576141e461501c565b6141f7601f8201601f1916602001614ec4565b81815284602083860101111561420b578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215614236578081fd5b81356109f581615032565b600060208284031215614252578081fd5b81516109f581615032565b6000806040838503121561426f578081fd5b823561427a81615032565b9150602083013561428a81615032565b809150509250929050565b600080600080600060a086880312156142ac578081fd5b85356142b781615032565b945060208601356142c781615032565b935060408601356001600160401b03808211156142e2578283fd5b6142ee89838a0161411f565b94506060880135915080821115614303578283fd5b61430f89838a0161411f565b93506080880135915080821115614324578283fd5b50614331888289016141bb565b9150509295509295909350565b600080600060608486031215614352578081fd5b833561435d81615032565b9250602084013561436d81615032565b929592945050506040919091013590565b600080600080600060808688031215614395578283fd5b85356143a081615032565b945060208601356143b081615032565b93506040860135925060608601356001600160401b038111156143d1578182fd5b6143dd8882890161417c565b969995985093965092949392505050565b60008060008060808587031215614403578182fd5b843561440e81615032565b9350602085013561441e81615032565b92506040850135915060608501356001600160401b0381111561443f578182fd5b61444b878288016141bb565b91505092959194509250565b600080600080600060a0868803121561446e578283fd5b853561447981615032565b9450602086013561448981615032565b9350604086013592506060860135915060808601356001600160401b038111156144b1578182fd5b614331888289016141bb565b600080604083850312156144cf578182fd5b82356144da81615032565b9150602083013561428a81615047565b600080604083850312156144fc578182fd5b823561450781615032565b946020939093013593505050565b6000806000806080858703121561452a578182fd5b843561453581615032565b935060208501359250604085013561454c81615032565b9396929550929360600135925050565b60008060008060608587031215614571578182fd5b843561457c81615032565b93506020850135925060408501356001600160401b0381111561459d578283fd5b6145a98782880161417c565b95989497509550505050565b6000602082840312156145c6578081fd5b81516109f581615047565b6000602082840312156145e2578081fd5b5051919050565b6000602082840312156145fa578081fd5b81356109f581615055565b600060208284031215614616578081fd5b81516109f581615055565b600080600060608486031215614635578081fd5b83356001600160401b038082111561464b578283fd5b908501906060828803121561465e578283fd5b614666614e7a565b823582811115614674578485fd5b8301601f81018913614684578485fd5b80356020614694613fba83614ef4565b8281528181019084830160608502860184018e10156146b157898afd5b8995505b84861015614711576060818f0312156146cc57898afd5b6146d4614e7a565b81356146df81615032565b8152818501358582015260408201356146f781615047565b6040820152835260019590950194918301916060016146b5565b5085525085810135925084831115614727578687fd5b6147338b848801614097565b81850152604086013592508483111561474a578687fd5b6147568b848801613f9a565b6040850152839850614769818b01613f8a565b975050505050505061477d60408501613f8a565b90509250925092565b600060208284031215614797578081fd5b5035919050565b600080604083850312156147b0578182fd5b82359150602083013561428a81615032565b60008060008060008060c087890312156147da578384fd5b8635955060208701356147ec81615032565b945060408701356147fc81615032565b935060608701356001600160401b0380821115614817578283fd5b6148238a838b0161411f565b94506080890135915080821115614838578283fd5b6148448a838b0161411f565b935060a0890135915080821115614859578283fd5b5061486689828a016141bb565b9150509295509295509295565b60008060008060808587031215614888578182fd5b84359350602085013561489a81615032565b9250604085013561454c81615032565b60008060008060008060a087890312156148c2578384fd5b8635955060208701356148d481615032565b945060408701356148e481615032565b93506060870135925060808701356001600160401b03811115614905578283fd5b61491189828a0161417c565b979a9699509497509295939492505050565b600080600080600060a0868803121561493a578283fd5b85359450602086013561494c81615032565b9350604086013561495c81615032565b92506060860135915060808601356001600160401b038111156144b1578182fd5b60008060008060008060c08789031215614995578384fd5b8635955060208701356149a781615032565b945060408701356149b781615032565b9350606087013592506080870135915060a08701356001600160401b038111156149df578182fd5b61486689828a016141bb565b6000806000606084860312156149ff578081fd5b83359250602084013561436d81615032565b60008060008060008060c08789031215614a29578384fd5b863595506020870135614a3b81615032565b9450604087013593506060870135614a5281615032565b92506080870135915060a08701356001600160401b038111156149df578182fd5b60008060408385031215614a85578182fd5b50508035926020909101359150565b6000815180845260208085019450808401835b83811015614ac357815187529582019590820190600101614aa7565b509495945050505050565b60008151808452614ae6816020860160208601614f5a565b601f01601f19169290920160200192915050565b60008251614b0c818460208701614f5a565b9190910192915050565b60008351614b28818460208801614f5a565b835190830190614b3c818360208801614f5a565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0386811682528516602082015260a060408201819052600090614b8590830186614a94565b8281036060840152614b978186614a94565b90508281036080840152614bab8185614ace565b98975050505050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090614c0e90830184614ace565b9695505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090613ea790830184614ace565b6001600160a01b03929092168252602082015260400190565b604081526000614c7e6040830185614a94565b8281036020840152614c908185614a94565b95945050505050565b6020815260006109f56020830184614ace565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252601890820152771bdddb995c881bd98818da1a5b19081b9bdd08199bdd5b9960421b604082015260600190565b6020808252601d908201527f62756e646c6520746f6b656e496420646f6573206e6f74206578697374000000604082015260600190565b60208082526038908201527f64617461206d75737420636f6e7461696e20746f6b656e496420746f207472616040820152776e7366657220746865206368696c6420746f6b656e20746f60401b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b602080825260199082015278195e1d195c9b985b0818d85b1b1cc81c995cdd1c9a58dd1959603a1b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b604051606081016001600160401b0381118282101715614e9c57614e9c61501c565b60405290565b604080519081016001600160401b0381118282101715614e9c57614e9c61501c565b604051601f8201601f191681016001600160401b0381118282101715614eec57614eec61501c565b604052919050565b60006001600160401b03821115614f0d57614f0d61501c565b5060051b60200190565b60008219821115614f2a57614f2a614ff0565b500190565b600082614f3e57614f3e615006565b500490565b600082821015614f5557614f55614ff0565b500390565b60005b83811015614f75578181015183820152602001614f5d565b83811115611a2b5750506000910152565b600181811c90821680614f9a57607f821691505b60208210811415614fbb57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415614fd557614fd5614ff0565b5060010190565b600082614feb57614feb615006565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461270657600080fd5b801515811461270657600080fd5b6001600160e01b03198116811461270657600080fdfe0ef52e516fb5aec15a5d3587e5480481b702b26db93c8430eca78b61990fd3f6a164736f6c6343000804000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102ab5760003560e01c80636352211e11610172578063b88d4fde116100d9578063d49d1bac11610092578063d49d1bac14610646578063df74908614610659578063e226ed221461066c578063e985e9c5146106a2578063eadb80b8146106b5578063ed81cdda146106dd578063f23a6e61146106f057600080fd5b8063b88d4fde146105e7578063ba6b5f96146102ed578063bc197c81146105fa578063bef44f181461060d578063c0ee0b8a14610620578063c87b56dd1461063357600080fd5b80638da7d0b51161012b5780638da7d0b51461058a57806395d89b411461059d5780639f181b5e146105a5578063a22cb465146105ae578063a6330851146105c1578063a7811732146105d457600080fd5b80636352211e14610518578063668037481461052b578063676a196a1461053e57806370a0823114610551578063830ef41b146105645780638d81f51e1461057757600080fd5b806322ab2e6f1161021657806342842e0e116101cf57806342842e0e1461045757806343a61a8e1461046a5780634f6ccce71461047d5780635680a3ad1461049057806360d4d23a146104c8578063627c81ff1461050557600080fd5b806322ab2e6f146103d657806323b872dd146103e45780632f745c59146103f7578063306d68881461040a57806335b21ceb1461041d578063365a86fc1461043057600080fd5b80630d5a621b116102685780630d5a621b14610348578063150b7a021461035b578063160b01a11461038757806318160ddd146103a85780631c9faae4146103b05780631d98f3c5146103c357600080fd5b806301ffc9a7146102b057806306fdde03146102d857806307cff6f2146102ed578063081812fc1461030257806308937f6214610322578063095ea7b314610335575b600080fd5b6102c36102be3660046145e9565b610703565b60405190151581526020015b60405180910390f35b6102e0610749565b6040516102cf9190614c99565b6103006102fb366004614515565b6107db565b005b610315610310366004614786565b6107fc565b6040516102cf9190614b45565b610300610330366004614a11565b610884565b6103006103433660046144ea565b6108cc565b610315610356366004614a73565b6109dd565b61036e61036936600461437e565b6109fc565b6040516001600160e01b031990911681526020016102cf565b61039a6103953660046149eb565b610a82565b6040519081526020016102cf565b60085461039a565b6102c36103be366004614225565b610ab6565b6103006103d1366004614873565b610beb565b61039a63cd740db560e01b81565b6103006103f236600461433e565b610cc8565b61039a6104053660046144ea565b610cf9565b6103006104183660046147c2565b610d8f565b61039a61042b36600461479e565b610f8e565b6103157f000000000000000000000000000000000000000000000000000000000000000081565b61030061046536600461433e565b610fb9565b61039a610478366004614786565b610fd4565b61039a61048b366004614786565b610fe1565b6102c361049e3660046144ea565b6001600160a01b03919091166000908152600e602090815260408083209383529290522054151590565b61039a6104d63660046149eb565b6000928352600f602090815260408085206001600160a01b039490941685529281528284209184525290205490565b610315610513366004614a73565b611082565b610315610526366004614786565b61109a565b61039a610539366004614621565b611111565b6102c361054c366004614225565b611540565b61039a61055f366004614225565b611677565b610300610572366004614873565b6116fe565b610300610585366004614923565b61178c565b61039a610598366004614786565b61188f565b6102e06118a6565b61039a600b5481565b6103006105bc3660046144bd565b6118b5565b6103006105cf36600461497d565b6118c4565b61039a6105e2366004614786565b6119e2565b6103006105f53660046143ee565b6119f9565b61036e610608366004614295565b611a31565b61030061061b366004614873565b611bc0565b61030061062e36600461455c565b611c33565b6102e0610641366004614786565b611c87565b6103006106543660046148aa565b611d5e565b61030061066736600461479e565b611da6565b61039a61067a36600461479e565b60009182526011602090815260408084206001600160a01b0393909316845291905290205490565b6102c36106b036600461425d565b612172565b6106c86106c33660046144ea565b6121a0565b604080519283526020830191909152016102cf565b61039a6106eb3660046144ea565b612200565b61036e6106fe366004614457565b6122f4565b60006001600160e01b03198216630a85bd0160e11b148061073457506001600160e01b03198216639fa4074560e01b145b8061074357506107438261230e565b92915050565b60606000805461075890614f86565b80601f016020809104026020016040519081016040528092919081815260200182805461078490614f86565b80156107d15780601f106107a6576101008083540402835291602001916107d1565b820191906000526020600020905b8154815290600101906020018083116107b457829003601f168201915b5050505050905090565b60405162461bcd60e51b81526004016107f390614e10565b60405180910390fd5b60006108078261234e565b6108685760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016107f3565b506000908152600460205260409020546001600160a01b031690565b60405162461bcd60e51b815260206004820152601d60248201527f424f54544f4d5f55505f4348494c445f4e4f545f535550504f5254454400000060448201526064016107f3565b60006108d78261109a565b9050806001600160a01b0316836001600160a01b031614156109455760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016107f3565b336001600160a01b038216148061096157506109618133612172565b6109ce5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b60648201526084016107f3565b6109d8838361236b565b505050565b6000828152600c602052604081206109f590836123d9565b9392505050565b60006002600a541415610a215760405162461bcd60e51b81526004016107f390614e43565b6002600a81905550610a6b85338686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506123e592505050565b50630a85bd0160e11b6001600a5595945050505050565b6000838152600d602090815260408083206001600160a01b03861684529091528120610aae90836123d9565b949350505050565b604051631c2d8fb360e31b8152765045524d49545445445f42554e444c455f45524332305360481b600482015260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e16c7d989060240160206040518083038186803b158015610b3457600080fd5b505afa158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c9190614241565b60405163439439df60e11b81529091506001600160a01b0382169063872873be90610b9b908690600401614b45565b60206040518083038186803b158015610bb357600080fd5b505afa158015610bc7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f591906145b5565b6002600a541415610c0e5760405162461bcd60e51b81526004016107f390614e43565b6002600a55610c1f84848484612428565b604051632142170760e11b81526001600160a01b038316906342842e0e90610c4f90309087908690600401614bb7565b600060405180830381600087803b158015610c6957600080fd5b505af1158015610c7d573d6000803e3d6000fd5b50505050816001600160a01b0316836001600160a01b03168560008051602061506c83398151915284604051610cb591815260200190565b60405180910390a450506001600a555050565b610cd23382612447565b610cee5760405162461bcd60e51b81526004016107f390614dbf565b6109d8838383612509565b6000610d0483611677565b8210610d665760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016107f3565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6002600a541415610db25760405162461bcd60e51b81526004016107f390614e43565b6002600a558151835114610e085760405162461bcd60e51b815260206004820152601f60248201527f69647320616e6420616d6f756e7473206c656e677468206d69736d617463680060448201526064016107f3565b610e11856126b0565b610e1a86612709565b60005b8351811015610ebb576000848281518110610e4857634e487b7160e01b600052603260045260246000fd5b602002602001015190506000848381518110610e7457634e487b7160e01b600052603260045260246000fd5b60200260200101519050610e8a89888484612712565b6001600160a01b038816301415610ea857610ea83388848488612889565b505080610eb490614fc1565b9050610e1d565b506001600160a01b0385163014610f8157604051631759616b60e11b81526001600160a01b03851690632eb2c2d690610f009030908990889088908890600401614b59565b600060405180830381600087803b158015610f1a57600080fd5b505af1158015610f2e573d6000803e3d6000fd5b50505050836001600160a01b0316856001600160a01b0316877fa797202f39afe67da4ce6b40162421384da6655bc2054c48cb0e08fbb6ea418c8686604051610f78929190614c6b565b60405180910390a45b50506001600a5550505050565b6000828152600d602090815260408083206001600160a01b038516845290915281206109f590612923565b6109d8838383604051806020016040528060008152506119f9565b6000610743600083612200565b6000610fec60085490565b821061104f5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016107f3565b6008828154811061107057634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b60008281526010602052604081206109f590836123d9565b6000818152600260205260408120546001600160a01b0316806107435760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016107f3565b60008061111d8361292d565b85515190915015158061113557506000856020015151115b8061114557506000856040015151115b6111835760405162461bcd60e51b815260206004820152600f60248201526e62756e646c6520697320656d70747960881b60448201526064016107f3565b60005b8551518110156113255785518051829081106111b257634e487b7160e01b600052603260045260246000fd5b602002602001015160400151156112a95785518051829081106111e557634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b031663b88d4fde86308960000151858151811061122557634e487b7160e01b600052603260045260246000fd5b6020026020010151602001518660405160200161124491815260200190565b6040516020818303038152906040526040518563ffffffff1660e01b81526004016112729493929190614bdb565b600060405180830381600087803b15801561128c57600080fd5b505af11580156112a0573d6000803e3d6000fd5b50505050611313565b6113138583886000015184815181106112d257634e487b7160e01b600052603260045260246000fd5b6020026020010151600001518960000151858151811061130257634e487b7160e01b600052603260045260246000fd5b602002602001015160200151612950565b8061131d81614fc1565b915050611186565b5060005b8560200151518110156113b2576113a085838860200151848151811061135f57634e487b7160e01b600052603260045260246000fd5b6020026020010151600001518960200151858151811061138f57634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516129f1565b806113aa81614fc1565b915050611329565b5060005b8560400151518110156114ea57856040015181815181106113e757634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b0316632eb2c2d686308960400151858151811061142757634e487b7160e01b600052603260045260246000fd5b6020026020010151602001518a60400151868151811061145757634e487b7160e01b600052603260045260246000fd5b6020026020010151604001518760405160200161147691815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016114a5959493929190614b59565b600060405180830381600087803b1580156114bf57600080fd5b505af11580156114d3573d6000803e3d6000fd5b5050505080806114e290614fc1565b9150506113b6565b50826001600160a01b0316846001600160a01b03167f63478a9ffc3ee02f60be7618f5ebcc24dca8fdfaf29503c1f812162a941afe548360405161153091815260200190565b60405180910390a3949350505050565b604051631c2d8fb360e31b81526d5045524d49545445445f4e46545360901b600482015260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e16c7d989060240160206040518083038186803b1580156115b557600080fd5b505afa1580156115c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ed9190614241565b604051636651f11d60e01b81529091506000906001600160a01b03831690636651f11d9061161f908790600401614b45565b60206040518083038186803b15801561163757600080fd5b505afa15801561164b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166f91906145d1565b119392505050565b60006001600160a01b0382166116e25760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016107f3565b506001600160a01b031660009081526003602052604090205490565b61170781612a1b565b611710836126b0565b61171984612709565b611724848383612a59565b6117386001600160a01b0383168483612b33565b816001600160a01b0316836001600160a01b0316857fa8352277873fc0d2b233b8127433da351a4164fa701ed6ff79655694222932c48460405161177e91815260200190565b60405180910390a450505050565b6002600a5414156117af5760405162461bcd60e51b81526004016107f390614e43565b6002600a556117c085858585612428565b6001600160a01b0384163014156117e2576117dd338484846123e5565b611883565b604051635c46a7ef60e11b81526001600160a01b0384169063b88d4fde90611814903090889087908790600401614bdb565b600060405180830381600087803b15801561182e57600080fd5b505af1158015611842573d6000803e3d6000fd5b50505050826001600160a01b0316846001600160a01b03168660008051602061506c8339815191528560405161187a91815260200190565b60405180910390a45b50506001600a55505050565b6000818152600c6020526040812061074390612923565b60606001805461075890614f86565b6118c0338383612b89565b5050565b6002600a5414156118e75760405162461bcd60e51b81526004016107f390614e43565b6002600a556118f5856126b0565b6118fe86612709565b61190a86858585612712565b6001600160a01b03851630141561192d576119283385858585612889565b610f81565b604051637921219560e11b81526001600160a01b0385169063f242432a906119619030908990889088908890600401614c18565b600060405180830381600087803b15801561197b57600080fd5b505af115801561198f573d6000803e3d6000fd5b50505050836001600160a01b0316856001600160a01b0316877f16b5931e3f21f56cbd2534ea6493edfadf9ec64d0413aa2f2a4f79be6d7c0da18686604051610f78929190918252602082015260400190565b600081815260106020526040812061074390612923565b611a033383612447565b611a1f5760405162461bcd60e51b81526004016107f390614dbf565b611a2b84848484612c54565b50505050565b60006002600a541415611a565760405162461bcd60e51b81526004016107f390614e43565b6002600a558151602014611a7c5760405162461bcd60e51b81526004016107f390614d67565b6000611a89836020015190565b905060005b8551811015611ba757611af18233888481518110611abc57634e487b7160e01b600052603260045260246000fd5b6020026020010151888581518110611ae457634e487b7160e01b600052603260045260246000fd5b6020026020010151612c87565b336001600160a01b031682886001600160a01b03167e9b022bed8cf61abc5e33a83d371c1cfe8bec72ea5cfe121648583c057c4a36898581518110611b4657634e487b7160e01b600052603260045260246000fd5b6020026020010151898681518110611b6e57634e487b7160e01b600052603260045260246000fd5b6020026020010151604051611b8d929190918252602082015260400190565b60405180910390a480611b9f81614fc1565b915050611a8e565b50506001600a555063bc197c8160e01b95945050505050565b6002600a541415611be35760405162461bcd60e51b81526004016107f390614e43565b6002600a55611bf484848484612428565b611bff838383612ce0565b816001600160a01b0316836001600160a01b03168560008051602061506c83398151915284604051610cb591815260200190565b60405162461bcd60e51b815260206004820152602360248201527f544f4b454e5f46414c4c4241434b5f4552433232335f4e4f545f535550504f5260448201526215115160ea1b60648201526084016107f3565b6060611c928261234e565b611cf65760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016107f3565b6000611d0d60408051602081019091526000815290565b90506000815111611d2d57604051806020016040528060008152506109f5565b80611d3784612da1565b604051602001611d48929190614b16565b6040516020818303038152906040529392505050565b60405162461bcd60e51b815260206004820152601d60248201527f5452414e534645525f4552433232335f4e4f545f535550504f5254454400000060448201526064016107f3565b6002600a541415611dc95760405162461bcd60e51b81526004016107f390614e43565b6002600a5533611dd88361109a565b6001600160a01b031614611e245760405162461bcd60e51b815260206004820152601360248201527231b0b63632b91034b9903737ba1037bbb732b960691b60448201526064016107f3565b611e2d816126b0565b6000828152600c60205260408120611e4490612923565b111561209a576000828152600c60205260408120611e6290826123d9565b90505b6000838152600d602090815260408083206001600160a01b03851684529091528120611e9090612923565b1115612094576000838152600d602090815260408083206001600160a01b03851684529091528120611ec290826123d9565b6000858152600f602090815260408083206001600160a01b038716845282528083208484529091529020549091508015611fdb57611f0285848484612712565b604051637921219560e11b81523060048201526001600160a01b038581166024830152604482018490526064820183905260a06084830152600060a483015284169063f242432a9060c401600060405180830381600087803b158015611f6757600080fd5b505af1158015611f7b573d6000803e3d6000fd5b50505050826001600160a01b0316846001600160a01b0316867f16b5931e3f21f56cbd2534ea6493edfadf9ec64d0413aa2f2a4f79be6d7c0da18585604051611fce929190918252602082015260400190565b60405180910390a461208d565b611fe6858484612eba565b604051632142170760e11b81526001600160a01b038416906342842e0e9061201690309088908790600401614bb7565b600060405180830381600087803b15801561203057600080fd5b505af1925050508015612041575060015b61205057612050848484612ce0565b826001600160a01b0316846001600160a01b03168660008051602061506c8339815191528560405161208491815260200190565b60405180910390a45b5050611e65565b50611e2d565b60008281526010602052604081206120b190612923565b11156121695760008281526010602052604081206120cf90826123d9565b60008481526011602090815260408083206001600160a01b0385168452909152902054909150612100848383612a59565b6121146001600160a01b0383168483612b33565b816001600160a01b0316836001600160a01b0316857fa8352277873fc0d2b233b8127433da351a4164fa701ed6ff79655694222932c48460405161215a91815260200190565b60405180910390a4505061209a565b50506001600a55565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6001600160a01b0382166000908152600e60209081526040808320848452909152812054806121e15760405162461bcd60e51b81526004016107f390614cfe565b60006121ec8261109a565b63cd740db560e01b17959194509092505050565b6000806001600160a01b038416156122255761221c8484612f43565b93509050612231565b61222e8361109a565b90505b6001600160a01b0381163b156122e4576040516376c0e6ed60e11b81526001600160a01b0382169063ed81cdda9061226f9030908790600401614c52565b60206040518083038186803b15801561228757600080fd5b505afa9250505080156122b7575060408051601f3d908101601f191682019092526122b4918101906145d1565b60015b6122c0576122e4565b6001600160e01b0319811663cd740db560e01b14156122e25791506107439050565b505b63cd740db560e01b179392505050565b600060405162461bcd60e51b81526004016107f390614e10565b60006001600160e01b03198216637294ffed60e01b148061233f57506001600160e01b0319821663c5fd96cd60e01b145b80610743575061074382612f97565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906123a08261109a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006109f58383612fd7565b60008151116124065760405162461bcd60e51b81526004016107f390614d67565b6000612413826020015190565b90506124218582868661300f565b5050505050565b612431836126b0565b61243c848383613067565b611a2b848383612eba565b60006124528261234e565b6124b35760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016107f3565b60006124be8361109a565b9050806001600160a01b0316846001600160a01b031614806124f95750836001600160a01b03166124ee846107fc565b6001600160a01b0316145b80610aae5750610aae8185612172565b826001600160a01b031661251c8261109a565b6001600160a01b0316146125805760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016107f3565b6001600160a01b0382166125e25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016107f3565b6125ed83838361316c565b6125f860008261236b565b6001600160a01b0383166000908152600360205260408120805460019290612621908490614f43565b90915550506001600160a01b038216600090815260036020526040812080546001929061264f908490614f17565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0381166127065760405162461bcd60e51b815260206004820152601e60248201527f6368696c64207472616e7366657220746f207a65726f2061646472657373000060448201526064016107f3565b50565b612706816131d0565b801580159061274b57506000848152600f602090815260408083206001600160a01b038716845282528083208584529091529020548111155b6127a75760405162461bcd60e51b815260206004820152602760248201527f696e73756666696369656e74206368696c642062616c616e636520666f7220746044820152663930b739b332b960c91b60648201526084016107f3565b6000848152600f602090815260408083206001600160a01b03871684528252808320858452909152812080548392906127e1908490614f43565b90915550506000848152600f602090815260408083206001600160a01b03871684528252808320858452909152902054611a2b576000848152600d602090815260408083206001600160a01b03871684529091529020612841908361326e565b506000848152600d602090815260408083206001600160a01b0387168452909152902061286d90612923565b611a2b576000848152600c60205260409020612421908461327a565b80516020146128aa5760405162461bcd60e51b81526004016107f390614d67565b60006128b7826020015190565b90506128c581868686612c87565b846001600160a01b031681876001600160a01b03167e9b022bed8cf61abc5e33a83d371c1cfe8bec72ea5cfe121648583c057c4a368787604051612913929190918252602082015260400190565b60405180910390a4505050505050565b6000610743825490565b600080600b6000815461293f90614fc1565b91829055509050610743838261328f565b6002600a5414156129735760405162461bcd60e51b81526004016107f390614e43565b6002600a556129848484848461300f565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd906129b490879030908690600401614bb7565b600060405180830381600087803b1580156129ce57600080fd5b505af11580156129e2573d6000803e3d6000fd5b50506001600a55505050505050565b6129fa81612a1b565b612a06848484846132a9565b611a2b6001600160a01b038316853084613300565b600081116127065760405162461bcd60e51b815260206004820152600b60248201526a1e995c9bc8185b5bdd5b9d60aa1b60448201526064016107f3565b60008381526011602090815260408083206001600160a01b038616845290915290205481811015612adb5760405162461bcd60e51b815260206004820152602660248201527f6e6f7420656e6f75676820746f6b656e20617661696c61626c6520746f20747260448201526530b739b332b960d11b60648201526084016107f3565b6000612ae78383614f43565b60008681526011602090815260408083206001600160a01b03891684529091529020819055905080612421576000858152601060205260409020612b2b908561327a565b505050505050565b6109d88363a9059cbb60e01b8484604051602401612b52929190614c52565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613321565b816001600160a01b0316836001600160a01b03161415612be75760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b60448201526064016107f3565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612c5f848484612509565b612c6b848484846133f3565b611a2b5760405162461bcd60e51b81526004016107f390614cac565b612c9083611540565b612cd45760405162461bcd60e51b8152602060048201526015602482015274195c98cc4c4d4d481b9bdd081c195c9b5a5d1d1959605a1b60448201526064016107f3565b611a2b84848484613500565b60405163095ea7b360e01b81526001600160a01b0383169063095ea7b390612d0e9030908590600401614c52565b600060405180830381600087803b158015612d2857600080fd5b505af1925050508015612d39575060015b506040516323b872dd60e01b81526001600160a01b038316906323b872dd90612d6a90309087908690600401614bb7565b600060405180830381600087803b158015612d8457600080fd5b505af1158015612d98573d6000803e3d6000fd5b50505050505050565b606081612dc55750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612def5780612dd981614fc1565b9150612de89050600a83614f2f565b9150612dc9565b6000816001600160401b03811115612e1757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015612e41576020820181803683370190505b5090505b8415610aae57612e56600183614f43565b9150612e63600a86614fdc565b612e6e906030614f17565b60f81b818381518110612e9157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350612eb3600a86614f2f565b9450612e45565b6000838152600d602090815260408083206001600160a01b03861684529091529020612ee6908261326e565b506001600160a01b0382166000818152600e602090815260408083208584528252808320839055868352600d825280832093835292905220612f2790612923565b6109d8576000838152600c60205260409020611a2b908361327a565b6001600160a01b0382166000908152600e6020908152604080832084845290915281205480612f845760405162461bcd60e51b81526004016107f390614cfe565b612f8d8161109a565b91505b9250929050565b60006001600160e01b0319821663f68ab2e360e01b1480612fc857506001600160e01b03198216630271189760e51b145b806107435750610743826135e4565b6000826000018281548110612ffc57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b61301882611540565b61305b5760405162461bcd60e51b8152602060048201526014602482015273195c98cdcc8c481b9bdd081c195c9b5a5d1d195960621b60448201526064016107f3565b611a2b8484848461363f565b6001600160a01b0382166000908152600e60209081526040808320848452909152902054806130f65760405162461bcd60e51b815260206004820152603560248201527f5f7472616e736665724368696c64205f6368696c64436f6e7472616374205f636044820152741a1a5b19151bdad95b9259081b9bdd08199bdd5b99605a1b60648201526084016107f3565b8381146131635760405162461bcd60e51b815260206004820152603560248201527f436f6d706f7361626c65546f70446f776e3a205f7472616e736665724368696c60448201527419081ddc9bdb99c81d1bdad95b925908199bdd5b99605a1b60648201526084016107f3565b611a2b816131d0565b6001600160a01b0382163014156131c55760405162461bcd60e51b815260206004820152601a60248201527f6e65737465642062756e646c6573206e6f7420616c6c6f77656400000000000060448201526064016107f3565b6109d8838383613745565b60006131db82610fd4565b90506001600160a01b0381163314806132045750336131f9836107fc565b6001600160a01b0316145b8061321457506132148133612172565b6118c05760405162461bcd60e51b815260206004820152602560248201527f7472616e736665724368696c64206d73672e73656e646572206e6f7420656c696044820152646769626c6560d81b60648201526084016107f3565b60006109f583836137fd565b60006109f5836001600160a01b0384166137fd565b6118c082826040518060200160405280600081525061391a565b6132b282610ab6565b6132f45760405162461bcd60e51b8152602060048201526013602482015272195c98cc8c081b9bdd081c195c9b5a5d1d1959606a1b60448201526064016107f3565b611a2b8484848461394d565b611a2b846323b872dd60e01b858585604051602401612b5293929190614bb7565b6000613376826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613a339092919063ffffffff16565b8051909150156109d8578080602001905181019061339491906145b5565b6109d85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107f3565b60006001600160a01b0384163b156134f557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290613437903390899088908890600401614bdb565b602060405180830381600087803b15801561345157600080fd5b505af1925050508015613481575060408051601f3d908101601f1916820190925261347e91810190614605565b60015b6134db573d8080156134af576040519150601f19603f3d011682016040523d82523d6000602084013e6134b4565b606091505b5080516134d35760405162461bcd60e51b81526004016107f390614cac565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610aae565b506001949350505050565b6135098461234e565b6135255760405162461bcd60e51b81526004016107f390614d30565b6000848152600d602090815260408083206001600160a01b0387168452909152812061355090612923565b905080613571576000858152600c6020526040902061356f9085613a42565b505b6000858152600d602090815260408083206001600160a01b0388168452909152902061359d9084613a57565b506000858152600f602090815260408083206001600160a01b03881684528252808320868452909152812080548492906135d8908490614f17565b90915550505050505050565b60006001600160e01b0319821663cde244d960e01b148061361557506001600160e01b031982166328d12bf960e21b145b806136305750630f7ef9b560e11b6001600160e01b03198316145b80610743575061074382613a63565b6136488361234e565b6136645760405162461bcd60e51b81526004016107f390614d30565b6000838152600d602090815260408083206001600160a01b0386168452909152812061368f90612923565b9050806136b0576000848152600c602052604090206136ae9084613a42565b505b6000848152600d602090815260408083206001600160a01b038716845290915290206136dc9083613a57565b506001600160a01b038381166000818152600e60209081526040808320878452825291829020889055905185815291928792908916917f0371ddf2288ad1ba92626a7e31c86a9d006e592cfe57d7d946ef08b13457c08b91015b60405180910390a45050505050565b6001600160a01b0383166137a05761379b81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6137c3565b816001600160a01b0316836001600160a01b0316146137c3576137c38382613a88565b6001600160a01b0382166137da576109d881613b25565b826001600160a01b0316826001600160a01b0316146109d8576109d88282613bfe565b60008181526001830160205260408120548015613910576000613821600183614f43565b855490915060009061383590600190614f43565b90508181146138b657600086600001828154811061386357634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508087600001848154811061389457634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b85548690806138d557634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610743565b6000915050610743565b6139248383613c42565b61393160008484846133f3565b6109d85760405162461bcd60e51b81526004016107f390614cac565b6139568361234e565b6139725760405162461bcd60e51b81526004016107f390614d30565b60008381526011602090815260408083206001600160a01b0386168452909152902054806139b45760008481526010602052604090206139b29084613a42565b505b60008481526011602090815260408083206001600160a01b0387168452909152812080548492906139e6908490614f17565b92505081905550826001600160a01b031684866001600160a01b03167f684ce28ace37552c6bfb98b7cceda8ed55327078eafb5dfb31218e08563827638560405161373691815260200190565b6060610aae8484600085613d81565b60006109f5836001600160a01b038416613eb2565b60006109f58383613eb2565b60006001600160e01b0319821663780e9d6360e01b1480610743575061074382613f01565b60006001613a9584611677565b613a9f9190614f43565b600083815260076020526040902054909150808214613af2576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090613b3790600190614f43565b60008381526009602052604081205460088054939450909284908110613b6d57634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508060088381548110613b9c57634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480613be257634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b6000613c0983611677565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b038216613c985760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016107f3565b613ca18161234e565b15613cee5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016107f3565b613cfa6000838361316c565b6001600160a01b0382166000908152600360205260408120805460019290613d23908490614f17565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b606082471015613de25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016107f3565b6001600160a01b0385163b613e395760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107f3565b600080866001600160a01b03168587604051613e559190614afa565b60006040518083038185875af1925050503d8060008114613e92576040519150601f19603f3d011682016040523d82523d6000602084013e613e97565b606091505b5091509150613ea7828286613f51565b979650505050505050565b6000818152600183016020526040812054613ef957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610743565b506000610743565b60006001600160e01b031982166380ac58cd60e01b1480613f3257506001600160e01b03198216635b5e139f60e01b145b8061074357506301ffc9a760e01b6001600160e01b0319831614610743565b60608315613f605750816109f5565b825115613f705782518084602001fd5b8160405162461bcd60e51b81526004016107f39190614c99565b8035613f9581615032565b919050565b600082601f830112613faa578081fd5b81356020613fbf613fba83614ef4565b614ec4565b80838252828201915082860187848660051b8901011115613fde578586fd5b855b8581101561408a5781356001600160401b0380821115613ffe578889fd5b908901906060828c03601f190181131561401657898afd5b61401e614e7a565b8884013561402b81615032565b81526040848101358481111561403f578c8dfd5b61404d8f8c8389010161411f565b838c015250918401359183831115614063578b8cfd5b6140718e8b8588010161411f565b9082015287525050509284019290840190600101613fe0565b5090979650505050505050565b600082601f8301126140a7578081fd5b813560206140b7613fba83614ef4565b80838252828201915082860187848660061b89010111156140d6578586fd5b855b8581101561408a57604080838b0312156140f0578788fd5b6140f8614ea2565b833561410381615032565b81528387013587820152855293850193909101906001016140d8565b600082601f83011261412f578081fd5b8135602061413f613fba83614ef4565b80838252828201915082860187848660051b890101111561415e578586fd5b855b8581101561408a57813584529284019290840190600101614160565b60008083601f84011261418d578182fd5b5081356001600160401b038111156141a3578182fd5b602083019150836020828501011115612f9057600080fd5b600082601f8301126141cb578081fd5b81356001600160401b038111156141e4576141e461501c565b6141f7601f8201601f1916602001614ec4565b81815284602083860101111561420b578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215614236578081fd5b81356109f581615032565b600060208284031215614252578081fd5b81516109f581615032565b6000806040838503121561426f578081fd5b823561427a81615032565b9150602083013561428a81615032565b809150509250929050565b600080600080600060a086880312156142ac578081fd5b85356142b781615032565b945060208601356142c781615032565b935060408601356001600160401b03808211156142e2578283fd5b6142ee89838a0161411f565b94506060880135915080821115614303578283fd5b61430f89838a0161411f565b93506080880135915080821115614324578283fd5b50614331888289016141bb565b9150509295509295909350565b600080600060608486031215614352578081fd5b833561435d81615032565b9250602084013561436d81615032565b929592945050506040919091013590565b600080600080600060808688031215614395578283fd5b85356143a081615032565b945060208601356143b081615032565b93506040860135925060608601356001600160401b038111156143d1578182fd5b6143dd8882890161417c565b969995985093965092949392505050565b60008060008060808587031215614403578182fd5b843561440e81615032565b9350602085013561441e81615032565b92506040850135915060608501356001600160401b0381111561443f578182fd5b61444b878288016141bb565b91505092959194509250565b600080600080600060a0868803121561446e578283fd5b853561447981615032565b9450602086013561448981615032565b9350604086013592506060860135915060808601356001600160401b038111156144b1578182fd5b614331888289016141bb565b600080604083850312156144cf578182fd5b82356144da81615032565b9150602083013561428a81615047565b600080604083850312156144fc578182fd5b823561450781615032565b946020939093013593505050565b6000806000806080858703121561452a578182fd5b843561453581615032565b935060208501359250604085013561454c81615032565b9396929550929360600135925050565b60008060008060608587031215614571578182fd5b843561457c81615032565b93506020850135925060408501356001600160401b0381111561459d578283fd5b6145a98782880161417c565b95989497509550505050565b6000602082840312156145c6578081fd5b81516109f581615047565b6000602082840312156145e2578081fd5b5051919050565b6000602082840312156145fa578081fd5b81356109f581615055565b600060208284031215614616578081fd5b81516109f581615055565b600080600060608486031215614635578081fd5b83356001600160401b038082111561464b578283fd5b908501906060828803121561465e578283fd5b614666614e7a565b823582811115614674578485fd5b8301601f81018913614684578485fd5b80356020614694613fba83614ef4565b8281528181019084830160608502860184018e10156146b157898afd5b8995505b84861015614711576060818f0312156146cc57898afd5b6146d4614e7a565b81356146df81615032565b8152818501358582015260408201356146f781615047565b6040820152835260019590950194918301916060016146b5565b5085525085810135925084831115614727578687fd5b6147338b848801614097565b81850152604086013592508483111561474a578687fd5b6147568b848801613f9a565b6040850152839850614769818b01613f8a565b975050505050505061477d60408501613f8a565b90509250925092565b600060208284031215614797578081fd5b5035919050565b600080604083850312156147b0578182fd5b82359150602083013561428a81615032565b60008060008060008060c087890312156147da578384fd5b8635955060208701356147ec81615032565b945060408701356147fc81615032565b935060608701356001600160401b0380821115614817578283fd5b6148238a838b0161411f565b94506080890135915080821115614838578283fd5b6148448a838b0161411f565b935060a0890135915080821115614859578283fd5b5061486689828a016141bb565b9150509295509295509295565b60008060008060808587031215614888578182fd5b84359350602085013561489a81615032565b9250604085013561454c81615032565b60008060008060008060a087890312156148c2578384fd5b8635955060208701356148d481615032565b945060408701356148e481615032565b93506060870135925060808701356001600160401b03811115614905578283fd5b61491189828a0161417c565b979a9699509497509295939492505050565b600080600080600060a0868803121561493a578283fd5b85359450602086013561494c81615032565b9350604086013561495c81615032565b92506060860135915060808601356001600160401b038111156144b1578182fd5b60008060008060008060c08789031215614995578384fd5b8635955060208701356149a781615032565b945060408701356149b781615032565b9350606087013592506080870135915060a08701356001600160401b038111156149df578182fd5b61486689828a016141bb565b6000806000606084860312156149ff578081fd5b83359250602084013561436d81615032565b60008060008060008060c08789031215614a29578384fd5b863595506020870135614a3b81615032565b9450604087013593506060870135614a5281615032565b92506080870135915060a08701356001600160401b038111156149df578182fd5b60008060408385031215614a85578182fd5b50508035926020909101359150565b6000815180845260208085019450808401835b83811015614ac357815187529582019590820190600101614aa7565b509495945050505050565b60008151808452614ae6816020860160208601614f5a565b601f01601f19169290920160200192915050565b60008251614b0c818460208701614f5a565b9190910192915050565b60008351614b28818460208801614f5a565b835190830190614b3c818360208801614f5a565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0386811682528516602082015260a060408201819052600090614b8590830186614a94565b8281036060840152614b978186614a94565b90508281036080840152614bab8185614ace565b98975050505050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090614c0e90830184614ace565b9695505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090613ea790830184614ace565b6001600160a01b03929092168252602082015260400190565b604081526000614c7e6040830185614a94565b8281036020840152614c908185614a94565b95945050505050565b6020815260006109f56020830184614ace565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252601890820152771bdddb995c881bd98818da1a5b19081b9bdd08199bdd5b9960421b604082015260600190565b6020808252601d908201527f62756e646c6520746f6b656e496420646f6573206e6f74206578697374000000604082015260600190565b60208082526038908201527f64617461206d75737420636f6e7461696e20746f6b656e496420746f207472616040820152776e7366657220746865206368696c6420746f6b656e20746f60401b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b602080825260199082015278195e1d195c9b985b0818d85b1b1cc81c995cdd1c9a58dd1959603a1b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b604051606081016001600160401b0381118282101715614e9c57614e9c61501c565b60405290565b604080519081016001600160401b0381118282101715614e9c57614e9c61501c565b604051601f8201601f191681016001600160401b0381118282101715614eec57614eec61501c565b604052919050565b60006001600160401b03821115614f0d57614f0d61501c565b5060051b60200190565b60008219821115614f2a57614f2a614ff0565b500190565b600082614f3e57614f3e615006565b500490565b600082821015614f5557614f55614ff0565b500390565b60005b83811015614f75578181015183820152602001614f5d565b83811115611a2b5750506000910152565b600181811c90821680614f9a57607f821691505b60208210811415614fbb57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415614fd557614fd5614ff0565b5060010190565b600082614feb57614feb615006565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461270657600080fd5b801515811461270657600080fd5b6001600160e01b03198116811461270657600080fdfe0ef52e516fb5aec15a5d3587e5480481b702b26db93c8430eca78b61990fd3f6a164736f6c6343000804000a",
  "devdoc": {
    "author": "NFTfi",
    "details": "ERC998 Top-Down Composable Non-Fungible Token that supports permitted ERC721, ERC1155 and ERC20 children.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "balanceOfERC20(uint256,address)": {
        "details": "Look up the balance of ERC20 tokens for a specific token and ERC20 contract",
        "params": {
          "_erc20Contract": "The ERC20 contract",
          "_tokenId": "The token that owns the ERC20 tokens"
        },
        "returns": {
          "_0": "The number of ERC20 tokens owned by a token"
        }
      },
      "buildBundle(((address,uint256,bool)[],(address,uint256)[],(address,uint256[],uint256[])[]),address,address)": {
        "details": "used by the loan contract to build a bundle from the BundleElements struct at the beginning of a loan, returns the id of the created bundle",
        "params": {
          "_bundleElements": "- the lists of erc721-20-1155 tokens that are to be bundled",
          "_receiver": "receiver of the created bundle, normally the loan contract",
          "_sender": "sender of the tokens in the bundle - the borrower"
        }
      },
      "childBalance(uint256,address,uint256)": {
        "details": "Gives child balance for a specific child contract and child id",
        "params": {
          "_childContract": "The ERC1155 contract of the child token",
          "_childTokenId": "The tokenId of the child token"
        }
      },
      "childContractByIndex(uint256,uint256)": {
        "params": {
          "_index": "The index position of the child contract",
          "_tokenId": "The parent token of child tokens in child contract"
        },
        "returns": {
          "childContract": "The contract found at the _tokenId and index"
        }
      },
      "childExists(address,uint256)": {
        "params": {
          "_childContract": "The contract address of the child token",
          "_childTokenId": "The tokenId of the child"
        },
        "returns": {
          "_0": "True if the child exists, false otherwise"
        }
      },
      "childTokenByIndex(uint256,address,uint256)": {
        "params": {
          "_childContract": "The child contract of the child token",
          "_index": "The index position of the child token",
          "_tokenId": "The parent token of the child token"
        },
        "returns": {
          "childTokenId": "The child tokenId for the parent token, child token and index"
        }
      },
      "constructor": {
        "details": "Stores the NftfiHub, name and symbol",
        "params": {
          "_name": "name of the token contract",
          "_nftfiHub": "Address of the NftfiHub contract",
          "_symbol": "symbol of the token contract"
        }
      },
      "decomposeBundle(uint256,address)": {
        "details": "This method may run out of gas if the list of children is too big. In that case, children can be removed      individually.",
        "params": {
          "_receiver": "address of the receiver of the children",
          "_tokenId": "the id of the bundle"
        }
      },
      "erc20ContractByIndex(uint256,uint256)": {
        "params": {
          "_index": "The index position of the child contract",
          "_tokenId": "The parent token of ERC20 tokens"
        },
        "returns": {
          "_0": "childContract The contract found at the tokenId and index"
        }
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getERC20(address,uint256,address,uint256)": {
        "details": "This contract has to be approved first by _erc20Contract"
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
        "params": {
          "_data": "Up to the first 32 bytes contains an integer which is the receiving parent tokenId",
          "_from": "The owner of the child token",
          "_ids": "The list of token id that is being transferred to the parent",
          "_values": "The list of amounts of the tokens that is being transferred"
        },
        "returns": {
          "_0": "the selector of this method"
        }
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "params": {
          "_childTokenId": "The token that is being transferred to the parent",
          "_data": "Up to the first 32 bytes contains an integer which is the receiving parent tokenId",
          "_from": "The owner of the child token"
        },
        "returns": {
          "_0": "the selector of this method"
        }
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "ownerOfChild(address,uint256)": {
        "params": {
          "_childContract": "The contract address of the child token",
          "_childTokenId": "The tokenId of the child"
        },
        "returns": {
          "parentTokenId": "The parent tokenId of _childTokenId",
          "parentTokenOwner": "The parent address of the parent token and ERC998 magic value"
        }
      },
      "permittedAsset(address)": {
        "params": {
          "_asset": "address of the asset"
        },
        "returns": {
          "_0": "true if permitted, false otherwise"
        }
      },
      "permittedErc20Asset(address)": {
        "params": {
          "_erc20Contract": "address of the erc20"
        },
        "returns": {
          "_0": "true if permitted, false otherwise"
        }
      },
      "rootOwnerOf(uint256)": {
        "params": {
          "_tokenId": "The token to query for a root owner address"
        },
        "returns": {
          "rootOwner": "The root owner at the top of tree of tokens and ERC998 magic value."
        }
      },
      "rootOwnerOfChild(address,uint256)": {
        "details": "Returns the owner at the top of the tree of composables Use Cases handled: - Case 1: Token owner is this contract and token. - Case 2: Token owner is other external top-down composable - Case 3: Token owner is other contract - Case 4: Token owner is user",
        "params": {
          "_childContract": "The contract address of the child token",
          "_childTokenId": "The tokenId of the child"
        },
        "returns": {
          "rootOwner": "The root owner at the top of tree of tokens and ERC998 magic value"
        }
      },
      "safeBatchTransferChild(uint256,address,address,uint256[],uint256[],bytes)": {
        "params": {
          "_amounts": "The list of amount of the token that is being transferred",
          "_childContract": "The ERC1155 contract of the child token",
          "_childTokenIds": "The list of tokenId of the token that is being transferred",
          "_data": "Additional data with no specified format",
          "_to": "The address that receives the child token",
          "_tokenId": "The owning token to transfer from"
        }
      },
      "safeTransferChild(uint256,address,address,uint256)": {
        "params": {
          "_childContract": "The ERC721 contract of the child token",
          "_childTokenId": "The tokenId of the token that is being transferred",
          "_fromTokenId": "The owning token to transfer from",
          "_to": "The address that receives the child token"
        }
      },
      "safeTransferChild(uint256,address,address,uint256,bytes)": {
        "params": {
          "_childContract": "The ERC721 contract of the child token",
          "_childTokenId": "The tokenId of the token that is being transferred",
          "_data": "Additional data with no specified format",
          "_fromTokenId": "The owning token to transfer from",
          "_to": "The address that receives the child token"
        }
      },
      "safeTransferChild(uint256,address,address,uint256,uint256,bytes)": {
        "params": {
          "_amount": "The amount of the token that is being transferred",
          "_childContract": "The ERC1155 contract of the child token",
          "_childTokenId": "The tokenId of the token that is being transferred",
          "_data": "Additional data with no specified format",
          "_to": "The address that receives the child token",
          "_tokenId": "The owning token to transfer from"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalChildContracts(uint256)": {
        "params": {
          "_tokenId": "The parent token of child tokens in child contracts"
        },
        "returns": {
          "_0": "uint256 The total number of child contracts with tokens owned by _tokenId"
        }
      },
      "totalChildTokens(uint256,address)": {
        "params": {
          "_childContract": "The child contract containing the child tokens",
          "_tokenId": "The parent token of child tokens"
        },
        "returns": {
          "_0": "uint256 The total number of child tokens found in child contract that are owned by _tokenId"
        }
      },
      "totalERC20Contracts(uint256)": {
        "params": {
          "_tokenId": "The parent token of ERC20 tokens"
        },
        "returns": {
          "_0": "uint256 The total number of ERC20 tokens"
        }
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferChild(uint256,address,address,uint256)": {
        "details": "Transfer child token from top-down composable to address",
        "params": {
          "_childContract": "The ERC721 contract of the child token",
          "_childTokenId": "The tokenId of the token that is being transferred",
          "_fromTokenId": "The owning token to transfer from",
          "_to": "The address that receives the child token"
        }
      },
      "transferERC20(uint256,address,address,uint256)": {
        "params": {
          "_erc20Contract": "The ERC20 contract",
          "_to": "The address to send the ERC20 tokens to",
          "_tokenId": "The token to transfer from",
          "_value": "The number of ERC20 tokens to transfer"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "title": "NftfiBundler",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "childContractByIndex(uint256,uint256)": {
        "notice": "Get child contract by tokenId and index"
      },
      "childExists(address,uint256)": {
        "notice": "Tells whether the ERC721 type child exists or not"
      },
      "childTokenByIndex(uint256,address,uint256)": {
        "notice": "Get child token owned by _tokenId, in child contract, at index position"
      },
      "decomposeBundle(uint256,address)": {
        "notice": "Remove all the children from the bundle"
      },
      "erc20ContractByIndex(uint256,uint256)": {
        "notice": "Get ERC20 contract by tokenId and index"
      },
      "getChild(address,uint256,address,uint256)": {
        "notice": "Transfer a child token from an ERC721 contract to a composable. Used for old tokens that does not have a safeTransferFrom method like cryptokitties"
      },
      "getERC20(address,uint256,address,uint256)": {
        "notice": "Get ERC20 tokens from ERC20 contract."
      },
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
        "notice": "A token receives a batch of child tokens param The address that caused the transfer"
      },
      "onERC1155Received(address,address,uint256,uint256,bytes)": {
        "notice": "A token receives a child token"
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "notice": "A token receives a child token param The address that caused the transfer"
      },
      "ownerOfChild(address,uint256)": {
        "notice": "Get the parent tokenId and its owner of a ERC721 child token"
      },
      "permittedAsset(address)": {
        "notice": "Tells if an asset is permitted or not"
      },
      "permittedErc20Asset(address)": {
        "notice": "Tells if the erc20 is permitted or not"
      },
      "rootOwnerOf(uint256)": {
        "notice": "Get the root owner of tokenId"
      },
      "rootOwnerOfChild(address,uint256)": {
        "notice": "Get the root owner of a child token"
      },
      "safeBatchTransferChild(uint256,address,address,uint256[],uint256[],bytes)": {
        "notice": "Transfer batch of ERC1155 child token from top-down composable to address or other top-down composable"
      },
      "safeTransferChild(uint256,address,address,uint256)": {
        "notice": "Transfer child token from top-down composable to address"
      },
      "safeTransferChild(uint256,address,address,uint256,bytes)": {
        "notice": "Transfer child token from top-down composable to address or other top-down composable"
      },
      "safeTransferChild(uint256,address,address,uint256,uint256,bytes)": {
        "notice": "Transfer a ERC1155 child token from top-down composable to address or other top-down composable"
      },
      "tokenFallback(address,uint256,bytes)": {
        "notice": "NOT SUPPORTED Intended to receive ERC223 tokens. ERC223 tokens can be deposited as regular ERC20"
      },
      "totalChildContracts(uint256)": {
        "notice": "Get the total number of child contracts with tokens that are owned by _tokenId"
      },
      "totalChildTokens(uint256,address)": {
        "notice": "Get the total number of child tokens owned by tokenId that exist in a child contract"
      },
      "totalERC20Contracts(uint256)": {
        "notice": "Get the total number of ERC20 tokens owned by tokenId"
      },
      "transferChildToParent(uint256,address,uint256,address,uint256,bytes)": {
        "notice": "NOT SUPPORTED Intended to transfer bottom-up composable child token from top-down composable to other ERC721 token."
      },
      "transferERC20(uint256,address,address,uint256)": {
        "notice": "Transfer ERC20 tokens to address"
      },
      "transferERC223(uint256,address,address,uint256,bytes)": {
        "notice": "NOT SUPPORTED Intended to transfer ERC223 tokens. ERC223 tokens can be transferred as regular ERC20"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3553,
        "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
        "label": "_name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 3555,
        "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
        "label": "_symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 3559,
        "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
        "label": "_owners",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 3563,
        "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
        "label": "_balances",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3567,
        "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
        "label": "_tokenApprovals",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 3573,
        "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
        "label": "_operatorApprovals",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 4572,
        "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
        "label": "_ownedTokens",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 4576,
        "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
        "label": "_ownedTokensIndex",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 4579,
        "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
        "label": "_allTokens",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 4583,
        "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
        "label": "_allTokensIndex",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 802,
        "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
        "label": "_status",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 9448,
        "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
        "label": "tokenCount",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 9453,
        "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
        "label": "childContracts",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint256,t_struct(AddressSet)6788_storage)"
      },
      {
        "astId": 9460,
        "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
        "label": "childTokens",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UintSet)6945_storage))"
      },
      {
        "astId": 9466,
        "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
        "label": "childTokenOwner",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 8481,
        "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
        "label": "balances",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))"
      },
      {
        "astId": 9051,
        "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
        "label": "erc20ChildContracts",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_uint256,t_struct(AddressSet)6788_storage)"
      },
      {
        "astId": 9057,
        "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
        "label": "erc20Balances",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_struct(UintSet)6945_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct EnumerableSet.UintSet)",
        "numberOfBytes": "32",
        "value": "t_struct(UintSet)6945_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_struct(UintSet)6945_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => struct EnumerableSet.UintSet))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(UintSet)6945_storage)"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(AddressSet)6788_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct EnumerableSet.AddressSet)",
        "numberOfBytes": "32",
        "value": "t_struct(AddressSet)6788_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AddressSet)6788_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.AddressSet",
        "members": [
          {
            "astId": 6787,
            "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)6487_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Set)6487_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "members": [
          {
            "astId": 6482,
            "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 6486,
            "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(UintSet)6945_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.UintSet",
        "members": [
          {
            "astId": 6944,
            "contract": "contracts/composable/NftfiBundler.sol:NftfiBundler",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)6487_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}